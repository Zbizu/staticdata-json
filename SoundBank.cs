// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: SoundBank.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Soundbank {

  /// <summary>Holder for reflection information generated from SoundBank.proto</summary>
  public static partial class SoundBankReflection {

    #region Descriptor
    /// <summary>File descriptor for SoundBank.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SoundBankReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg9Tb3VuZEJhbmsucHJvdG8SCXNvdW5kYmFuayKNAgoGU291bmRzEh8KBXNv",
            "dW5kGAEgAygLMhAuc291bmRiYW5rLlNvdW5kEjsKFG51bWVyaWNfc291bmRf",
            "ZWZmZWN0GAIgAygLMh0uc291bmRiYW5rLk51bWVyaWNTb3VuZEVmZmVjdBIy",
            "Cg9hbWJpZW5jZV9zdHJlYW0YAyADKAsyGS5zb3VuZGJhbmsuQW1iaWVuY2VT",
            "dHJlYW0SPwoWYW1iaWVuY2Vfb2JqZWN0X3N0cmVhbRgEIAMoCzIfLnNvdW5k",
            "YmFuay5BbWJpZW5jZU9iamVjdFN0cmVhbRIwCg5tdXNpY190ZW1wbGF0ZRgF",
            "IAMoCzIYLnNvdW5kYmFuay5NdXNpY1RlbXBsYXRlIlMKBVNvdW5kEgoKAmlk",
            "GAEgASgNEhAKCGZpbGVuYW1lGAIgASgJEhkKEW9yaWdpbmFsX2ZpbGVuYW1l",
            "GAMgASgJEhEKCWlzX3N0cmVhbRgEIAEoCCKtAgoSTnVtZXJpY1NvdW5kRWZm",
            "ZWN0EgoKAmlkGAEgASgNEjgKEm51bWVyaWNfc291bmRfdHlwZRgCIAEoDjIc",
            "LnNvdW5kYmFuay5FTnVtZXJpY1NvdW5kVHlwZRIsCgxyYW5kb21fcGl0Y2gY",
            "AyABKAsyFi5zb3VuZGJhbmsuTWluTWF4RmxvYXQSLQoNcmFuZG9tX3ZvbHVt",
            "ZRgEIAEoCzIWLnNvdW5kYmFuay5NaW5NYXhGbG9hdBI5ChNzaW1wbGVfc291",
            "bmRfZWZmZWN0GAUgASgLMhwuc291bmRiYW5rLlNpbXBsZVNvdW5kRWZmZWN0",
            "EjkKE3JhbmRvbV9zb3VuZF9lZmZlY3QYBiABKAsyHC5zb3VuZGJhbmsuUmFu",
            "ZG9tU291bmRFZmZlY3QibgoOQW1iaWVuY2VTdHJlYW0SCgoCaWQYASABKA0S",
            "GAoQbG9vcGluZ19zb3VuZF9pZBgCIAEoDRI2Cg9kZWxheWVkX2VmZmVjdHMY",
            "AyADKAsyHS5zb3VuZGJhbmsuRGVsYXllZFNvdW5kRWZmZWN0IqMBChRBbWJp",
            "ZW5jZU9iamVjdFN0cmVhbRIKCgJpZBgBIAEoDRIgChhjb3VudGVkX2FwcGVh",
            "cmFuY2VfdHlwZXMYAiADKA0SQQoNc291bmRfZWZmZWN0cxgDIAMoCzIqLnNv",
            "dW5kYmFuay5BcHBlYXJhbmNlVHlwZXNDb3VudFNvdW5kRWZmZWN0EhoKEm1h",
            "eF9zb3VuZF9kaXN0YW5jZRgEIAEoDSJYCg1NdXNpY1RlbXBsYXRlEgoKAmlk",
            "GAEgASgNEhAKCHNvdW5kX2lkGAIgASgNEikKCm11c2ljX3R5cGUYAyABKA4y",
            "FS5zb3VuZGJhbmsuRU11c2ljVHlwZSIlChFTaW1wbGVTb3VuZEVmZmVjdBIQ",
            "Cghzb3VuZF9pZBgBIAEoDSIsChFSYW5kb21Tb3VuZEVmZmVjdBIXCg9yYW5k",
            "b21fc291bmRfaWQYASADKA0iTAoSRGVsYXllZFNvdW5kRWZmZWN0Eh8KF251",
            "bWVyaWNfc291bmRfZWZmZWN0X2lkGAEgASgNEhUKDWRlbGF5X3NlY29uZHMY",
            "AiABKA0iSgofQXBwZWFyYW5jZVR5cGVzQ291bnRTb3VuZEVmZmVjdBINCgVj",
            "b3VudBgBIAEoDRIYChBsb29waW5nX3NvdW5kX2lkGAIgASgNIicKC01pbk1h",
            "eEZsb2F0EgsKA21pbhgBIAEoAhILCgNtYXgYAiABKAIq+wUKEUVOdW1lcmlj",
            "U291bmRUeXBlEh4KGk5VTUVSSUNfU09VTkRfVFlQRV9VTktOT1dOEAASIwof",
            "TlVNRVJJQ19TT1VORF9UWVBFX1NQRUxMX0FUVEFDSxABEiQKIE5VTUVSSUNf",
            "U09VTkRfVFlQRV9TUEVMTF9IRUFMSU5HEAISJAogTlVNRVJJQ19TT1VORF9U",
            "WVBFX1NQRUxMX1NVUFBPUlQQAxIkCiBOVU1FUklDX1NPVU5EX1RZUEVfV0VB",
            "UE9OX0FUVEFDSxAEEiUKIU5VTUVSSUNfU09VTkRfVFlQRV9DUkVBVFVSRV9O",
            "T0lTRRAFEiUKIU5VTUVSSUNfU09VTkRfVFlQRV9DUkVBVFVSRV9ERUFUSBAG",
            "EiYKIk5VTUVSSUNfU09VTkRfVFlQRV9DUkVBVFVSRV9BVFRBQ0sQBxImCiJO",
            "VU1FUklDX1NPVU5EX1RZUEVfQU1CSUVOQ0VfU1RSRUFNEAgSJQohTlVNRVJJ",
            "Q19TT1VORF9UWVBFX0ZPT0RfQU5EX0RSSU5LEAkSJAogTlVNRVJJQ19TT1VO",
            "RF9UWVBFX0lURU1fTU9WRU1FTlQQChIcChhOVU1FUklDX1NPVU5EX1RZUEVf",
            "RVZFTlQQCxIZChVOVU1FUklDX1NPVU5EX1RZUEVfVUkQDBIwCixOVU1FUklD",
            "X1NPVU5EX1RZUEVfV0hJU1BFUl9XSVRIT1VUX09QRU5fQ0hBVBANEiMKH05V",
            "TUVSSUNfU09VTkRfVFlQRV9DSEFUX01FU1NBR0UQDhIcChhOVU1FUklDX1NP",
            "VU5EX1RZUEVfUEFSVFkQDxIfChtOVU1FUklDX1NPVU5EX1RZUEVfVklQX0xJ",
            "U1QQEBIoCiROVU1FUklDX1NPVU5EX1RZUEVfUkFJRF9BTk5PVU5DRU1FTlQQ",
            "ERIlCiFOVU1FUklDX1NPVU5EX1RZUEVfU0VSVkVSX01FU1NBR0UQEhIkCiBO",
            "VU1FUklDX1NPVU5EX1RZUEVfU1BFTExfR0VORVJJQxATKnYKCkVNdXNpY1R5",
            "cGUSFgoSTVVTSUNfVFlQRV9VTktOT1dOEAASFAoQTVVTSUNfVFlQRV9NVVNJ",
            "QxABEh4KGk1VU0lDX1RZUEVfTVVTSUNfSU1NRURJQVRFEAISGgoWTVVTSUNf",
            "VFlQRV9NVVNJQ19USVRMRRADKvBxChBFU291bmRFZmZlY3RUeXBlEh0KGVNP",
            "VU5EX0VGRkVDVF9UWVBFX1NpbGVuY2UQABIqCiZTT1VORF9FRkZFQ1RfVFlQ",
            "RV9IdW1hbkNsb3NlQXR0YWNrRmlzdBABEiwKKFNPVU5EX0VGRkVDVF9UWVBF",
            "X01vbnN0ZXJDbG9zZUF0dGFja0Zpc3QQAhImCiJTT1VORF9FRkZFQ1RfVFlQ",
            "RV9DbG9zZUF0dGFja1N3b3JkEAMSJQohU09VTkRfRUZGRUNUX1RZUEVfQ2xv",
            "c2VBdHRhY2tDbHViEAQSJAogU09VTkRfRUZGRUNUX1RZUEVfQ2xvc2VBdHRh",
            "Y2tBeGUQBRIjCh9TT1VORF9FRkZFQ1RfVFlQRV9EaXN0QXR0YWNrQm93EAYS",
            "KAokU09VTkRfRUZGRUNUX1RZUEVfRGlzdEF0dGFja0Nyb3NzYm93EAcSJQoh",
            "U09VTkRfRUZGRUNUX1RZUEVfRGlzdEF0dGFja1Rocm93EAgSKAokU09VTkRf",
            "RUZGRUNUX1RZUEVfTWFnaWNhbFJhbmdlQXR0YWNrEAkSIQodU09VTkRfRUZG",
            "RUNUX1RZUEVfU3BlbGxPclJ1bmUQChIbChdTT1VORF9FRkZFQ1RfVFlQRV9P",
            "dGhlchALEicKI1NPVU5EX0VGRkVDVF9UWVBFX1BoeXNpY2FsUmFuZ2VNaXNz",
            "EAwSJwojU09VTkRfRUZGRUNUX1RZUEVfRGlzdEF0dGFja0Jvd1Nob3QQDRIs",
            "CihTT1VORF9FRkZFQ1RfVFlQRV9EaXN0QXR0YWNrQ3Jvc3NCb3dTaG90EA4S",
            "KQolU09VTkRfRUZGRUNUX1RZUEVfRGlzdEF0dGFja1Rocm93U2hvdBAPEicK",
            "I1NPVU5EX0VGRkVDVF9UWVBFX0Rpc3RBdHRhY2tSb2RTaG90EBASKAokU09V",
            "TkRfRUZGRUNUX1RZUEVfRGlzdEF0dGFja1dhbmRTaG90EBESJgoiU09VTkRf",
            "RUZGRUNUX1RZUEVfQnVyc3RBcnJvd0VmZmVjdBASEigKJFNPVU5EX0VGRkVD",
            "VF9UWVBFX0RpYW1vbmRBcnJvd0VmZmVjdBATEh4KGlNPVU5EX0VGRkVDVF9U",
            "WVBFX05vRGFtYWdlEBQSLAooU09VTkRfRUZGRUNUX1RZUEVfTW9uc3Rlck1l",
            "bGVlQXR0YWNrRmlzdBBkEiwKKFNPVU5EX0VGRkVDVF9UWVBFX01vbnN0ZXJN",
            "ZWxlZUF0dGFja0NsYXcQZRIsCihTT1VORF9FRkZFQ1RfVFlQRV9Nb25zdGVy",
            "TWVsZWVBdHRhY2tCaXRlEGYSKwonU09VTkRfRUZGRUNUX1RZUEVfTW9uc3Rl",
            "ck1lbGVlQXR0YWNrUmlwEGcSLAooU09VTkRfRUZGRUNUX1RZUEVfTW9uc3Rl",
            "ck1lbGVlQXR0YWNrQWNpZBBoEi0KKVNPVU5EX0VGRkVDVF9UWVBFX01vbnN0",
            "ZXJNZWxlZUF0dGFja01hZ2ljEGkSMAosU09VTkRfRUZGRUNUX1RZUEVfTW9u",
            "c3Rlck1lbGVlQXR0YWNrRXRoZXJlYWwQahIxCi1TT1VORF9FRkZFQ1RfVFlQ",
            "RV9Nb25zdGVyTWVsZWVBdHRhY2tDb25zdHJ1Y3QQaxIoCiNTT1VORF9FRkZF",
            "Q1RfVFlQRV9TcGVsbExpZ2h0SGVhbGluZxDpBxIqCiVTT1VORF9FRkZFQ1Rf",
            "VFlQRV9TcGVsbEludGVuc2VIZWFsaW5nEOoHEisKJlNPVU5EX0VGRkVDVF9U",
            "WVBFX1NwZWxsVWx0aW1hdGVIZWFsaW5nEOsHEi4KKVNPVU5EX0VGRkVDVF9U",
            "WVBFX1NwZWxsSW50ZW5zZUhlYWxpbmdSdW5lEOwHEi8KKlNPVU5EX0VGRkVD",
            "VF9UWVBFX1NwZWxsVWx0aW1hdGVIZWFsaW5nUnVuZRDtBxIhChxTT1VORF9F",
            "RkZFQ1RfVFlQRV9TcGVsbEhhc3RlEO4HEjEKLFNPVU5EX0VGRkVDVF9UWVBF",
            "X1NwZWxsTGlnaHRNYWdpY01pc3NpbGVSdW5lEO8HEjEKLFNPVU5EX0VGRkVD",
            "VF9UWVBFX1NwZWxsSGVhdnlNYWdpY01pc3NpbGVSdW5lEPAHEioKJVNPVU5E",
            "X0VGRkVDVF9UWVBFX1NwZWxsU3VtbW9uQ3JlYXR1cmUQ8QcSIQocU09VTkRf",
            "RUZGRUNUX1RZUEVfU3BlbGxMaWdodBDyBxImCiFTT1VORF9FRkZFQ1RfVFlQ",
            "RV9TcGVsbEdyZWF0TGlnaHQQ8wcSMAorU09VTkRfRUZGRUNUX1RZUEVfU3Bl",
            "bGxDb252aW5jZUNyZWF0dXJlUnVuZRD0BxImCiFTT1VORF9FRkZFQ1RfVFlQ",
            "RV9TcGVsbEVuZXJneVdhdmUQ9QcSKQokU09VTkRfRUZGRUNUX1RZUEVfU3Bl",
            "bGxDaGFtZWxlb25SdW5lEPYHEigKI1NPVU5EX0VGRkVDVF9UWVBFX1NwZWxs",
            "RmlyZWJhbGxSdW5lEPcHEi0KKFNPVU5EX0VGRkVDVF9UWVBFX1NwZWxsR3Jl",
            "YXRGaXJlYmFsbFJ1bmUQ+AcSKAojU09VTkRfRUZGRUNUX1RZUEVfU3BlbGxG",
            "aXJlQm9tYlJ1bmUQ+QcSKQokU09VTkRfRUZGRUNUX1RZUEVfU3BlbGxFeHBs",
            "b3Npb25SdW5lEPoHEiQKH1NPVU5EX0VGRkVDVF9UWVBFX1NwZWxsRmlyZVdh",
            "dmUQ+wcSJgohU09VTkRfRUZGRUNUX1RZUEVfU3BlbGxGaW5kUGVyc29uEPwH",
            "EisKJlNPVU5EX0VGRkVDVF9UWVBFX1NwZWxsU3VkZGVuRGVhdGhSdW5lEP0H",
            "EiYKIVNPVU5EX0VGRkVDVF9UWVBFX1NwZWxsRW5lcmd5QmVhbRD+BxIrCiZT",
            "T1VORF9FRkZFQ1RfVFlQRV9TcGVsbEdyZWF0RW5lcmd5QmVhbRD/BxIlCiBT",
            "T1VORF9FRkZFQ1RfVFlQRV9TcGVsbEhlbGxzQ29yZRCACBIpCiRTT1VORF9F",
            "RkZFQ1RfVFlQRV9TcGVsbEZpcmVGaWVsZFJ1bmUQgQgSKwomU09VTkRfRUZG",
            "RUNUX1RZUEVfU3BlbGxQb2lzb25GaWVsZFJ1bmUQgggSKwomU09VTkRfRUZG",
            "RUNUX1RZUEVfU3BlbGxFbmVyZ3lGaWVsZFJ1bmUQgwgSKAojU09VTkRfRUZG",
            "RUNUX1RZUEVfU3BlbGxGaXJlV2FsbFJ1bmUQhAgSJgohU09VTkRfRUZGRUNU",
            "X1RZUEVfU3BlbGxDdXJlUG9pc29uEIUIEiwKJ1NPVU5EX0VGRkVDVF9UWVBF",
            "X1NwZWxsRGVzdHJveUZpZWxkUnVuZRCGCBIqCiVTT1VORF9FRkZFQ1RfVFlQ",
            "RV9TcGVsbEN1cmVQb2lzb25SdW5lEIcIEioKJVNPVU5EX0VGRkVDVF9UWVBF",
            "X1NwZWxsUG9pc29uV2FsbFJ1bmUQiAgSKgolU09VTkRfRUZGRUNUX1RZUEVf",
            "U3BlbGxFbmVyZ3lXYWxsUnVuZRCJCBIlCiBTT1VORF9FRkZFQ1RfVFlQRV9T",
            "cGVsbFNhbHZhdGlvbhCMCBIsCidTT1VORF9FRkZFQ1RfVFlQRV9TcGVsbENy",
            "ZWF0dXJlSWxsdXNpb24QjggSJwoiU09VTkRfRUZGRUNUX1RZUEVfU3BlbGxT",
            "dHJvbmdIYXN0ZRCPCBIgChtTT1VORF9FRkZFQ1RfVFlQRV9TcGVsbEZvb2QQ",
            "kggSKQokU09VTkRfRUZGRUNUX1RZUEVfU3BlbGxTdHJvbmdJY2VXYXZlEJMI",
            "EicKIlNPVU5EX0VGRkVDVF9UWVBFX1NwZWxsTWFnaWNTaGllbGQQlAgSJQog",
            "U09VTkRfRUZGRUNUX1RZUEVfU3BlbGxJbnZpc2libGUQlQgSMQosU09VTkRf",
            "RUZGRUNUX1RZUEVfU3BlbGxDb25qdXJlRXhwbG9zaXZlQXJyb3cQmQgSKAoj",
            "U09VTkRfRUZGRUNUX1RZUEVfU3BlbGxTb3VsZmlyZVJ1bmUQmggSKAojU09V",
            "TkRfRUZGRUNUX1RZUEVfU3BlbGxDb25qdXJlQXJyb3cQmwgSKAojU09VTkRf",
            "RUZGRUNUX1RZUEVfU3BlbGxQYXJhbHlzZVJ1bmUQnggSKgolU09VTkRfRUZG",
            "RUNUX1RZUEVfU3BlbGxFbmVyZ3lCb21iUnVuZRCfCBIpCiRTT1VORF9FRkZF",
            "Q1RfVFlQRV9TcGVsbFdyYXRoT2ZOYXR1cmUQoAgSLwoqU09VTkRfRUZGRUNU",
            "X1RZUEVfU3BlbGxTdHJvbmdFdGhlcmVhbFNwZWFyEKEIEiYKIVNPVU5EX0VG",
            "RkVDVF9UWVBFX1NwZWxsRnJvbnRTd2VlcBCjCBIoCiNTT1VORF9FRkZFQ1Rf",
            "VFlQRV9TcGVsbEJydXRhbFN0cmlrZRClCBIoCiNTT1VORF9FRkZFQ1RfVFlQ",
            "RV9TcGVsbEFubmloaWxhdGlvbhCmCBIoCiNTT1VORF9FRkZFQ1RfVFlQRV9T",
            "cGVsbEludml0ZUd1ZXN0cxCvCBIrCiZTT1VORF9FRkZFQ1RfVFlQRV9TcGVs",
            "bEludml0ZVN1Ym93bmVycxCwCBIlCiBTT1VORF9FRkZFQ1RfVFlQRV9TcGVs",
            "bEtpY2tHdWVzdBCxCBIkCh9TT1VORF9FRkZFQ1RfVFlQRV9TcGVsbEVkaXRE",
            "b29yELIIEikKJFNPVU5EX0VGRkVDVF9UWVBFX1NwZWxsVWx0aW1hdGVMaWdo",
            "dBCzCBIlCiBTT1VORF9FRkZFQ1RfVFlQRV9TcGVsbE1hZ2ljUm9wZRC0CBIq",
            "CiVTT1VORF9FRkZFQ1RfVFlQRV9TcGVsbFN0YWxhZ21pdGVSdW5lELUIEiwK",
            "J1NPVU5EX0VGRkVDVF9UWVBFX1NwZWxsRGlzaW50ZWdyYXRlUnVuZRC2CBIj",
            "Ch5TT1VORF9FRkZFQ1RfVFlQRV9TcGVsbEJlcnNlcmsQuAgSJAofU09VTkRf",
            "RUZGRUNUX1RZUEVfU3BlbGxMZXZpdGF0ZRC5CBInCiJTT1VORF9FRkZFQ1Rf",
            "VFlQRV9TcGVsbE1hc3NIZWFsaW5nELoIEisKJlNPVU5EX0VGRkVDVF9UWVBF",
            "X1NwZWxsQW5pbWF0ZURlYWRSdW5lELsIEiYKIVNPVU5EX0VGRkVDVF9UWVBF",
            "X1NwZWxsSGVhbEZyaWVuZBC8CBIoCiNTT1VORF9FRkZFQ1RfVFlQRV9TcGVs",
            "bFVuZGVhZExlZ2lvbhC9CBIpCiRTT1VORF9FRkZFQ1RfVFlQRV9TcGVsbE1h",
            "Z2ljV2FsbFJ1bmUQvggSJwoiU09VTkRfRUZGRUNUX1RZUEVfU3BlbGxEZWF0",
            "aFN0cmlrZRC/CBIoCiNTT1VORF9FRkZFQ1RfVFlQRV9TcGVsbEVuZXJneVN0",
            "cmlrZRDACBInCiJTT1VORF9FRkZFQ1RfVFlQRV9TcGVsbEZsYW1lU3RyaWtl",
            "EMEIEi4KKVNPVU5EX0VGRkVDVF9UWVBFX1NwZWxsQ2FuY2VsSW52aXNpYmls",
            "aXR5EMIIEioKJVNPVU5EX0VGRkVDVF9UWVBFX1NwZWxsUG9pc29uQm9tYlJ1",
            "bmUQwwgSMQosU09VTkRfRUZGRUNUX1RZUEVfU3BlbGxDb25qdXJlV2FuZE9m",
            "RGFya25lc3MQxAgSJQogU09VTkRfRUZGRUNUX1RZUEVfU3BlbGxDaGFsbGVu",
            "Z2UQxQgSKgolU09VTkRfRUZGRUNUX1RZUEVfU3BlbGxXaWxkR3Jvd3RoUnVu",
            "ZRDGCBIpCiRTT1VORF9FRkZFQ1RfVFlQRV9TcGVsbEZpZXJjZUJlcnNlcmsQ",
            "0QgSKAojU09VTkRfRUZGRUNUX1RZUEVfU3BlbGxHcm91bmRzaGFrZXIQ0ggS",
            "KgolU09VTkRfRUZGRUNUX1RZUEVfU3BlbGxXaGlybHdpbmRUaHJvdxDTCBIo",
            "CiNTT1VORF9FRkZFQ1RfVFlQRV9TcGVsbEVuY2hhbnRTcGVhchDWCBIpCiRT",
            "T1VORF9FRkZFQ1RfVFlQRV9TcGVsbEV0aGVyZWFsU3BlYXIQ1wgSJQogU09V",
            "TkRfRUZGRUNUX1RZUEVfU3BlbGxJY2VTdHJpa2UQ2AgSJwoiU09VTkRfRUZG",
            "RUNUX1RZUEVfU3BlbGxUZXJyYVN0cmlrZRDZCBImCiFTT1VORF9FRkZFQ1Rf",
            "VFlQRV9TcGVsbEljaWNsZVJ1bmUQ2ggSKQokU09VTkRfRUZGRUNUX1RZUEVf",
            "U3BlbGxBdmFsYW5jaGVSdW5lENsIEisKJlNPVU5EX0VGRkVDVF9UWVBFX1Nw",
            "ZWxsU3RvbmVTaG93ZXJSdW5lENwIEiwKJ1NPVU5EX0VGRkVDVF9UWVBFX1Nw",
            "ZWxsVGh1bmRlcnN0b3JtUnVuZRDdCBIpCiRTT1VORF9FRkZFQ1RfVFlQRV9T",
            "cGVsbEV0ZXJuYWxXaW50ZXIQ3ggSKgolU09VTkRfRUZGRUNUX1RZUEVfU3Bl",
            "bGxSYWdlT2ZUaGVTa2llcxDfCBIlCiBTT1VORF9FRkZFQ1RfVFlQRV9TcGVs",
            "bFRlcnJhV2F2ZRDgCBIjCh5TT1VORF9FRkZFQ1RfVFlQRV9TcGVsbEljZVdh",
            "dmUQ4QgSKQokU09VTkRfRUZGRUNUX1RZUEVfU3BlbGxEaXZpbmVNaXNzaWxl",
            "EOIIEioKJVNPVU5EX0VGRkVDVF9UWVBFX1NwZWxsV291bmRDbGVhbnNpbmcQ",
            "4wgSKQokU09VTkRfRUZGRUNUX1RZUEVfU3BlbGxEaXZpbmVDYWxkZXJhEOQI",
            "EikKJFNPVU5EX0VGRkVDVF9UWVBFX1NwZWxsRGl2aW5lSGVhbGluZxDlCBIm",
            "CiFTT1VORF9FRkZFQ1RfVFlQRV9TcGVsbFRyYWluUGFydHkQ5ggSKAojU09V",
            "TkRfRUZGRUNUX1RZUEVfU3BlbGxQcm90ZWN0UGFydHkQ5wgSJQogU09VTkRf",
            "RUZGRUNUX1RZUEVfU3BlbGxIZWFsUGFydHkQ6AgSKAojU09VTkRfRUZGRUNU",
            "X1RZUEVfU3BlbGxFbmNoYW50UGFydHkQ6QgSKwomU09VTkRfRUZGRUNUX1RZ",
            "UEVfU3BlbGxIb2x5TWlzc2lsZVJ1bmUQ6ggSIgodU09VTkRfRUZGRUNUX1RZ",
            "UEVfU3BlbGxDaGFyZ2UQ6wgSJQogU09VTkRfRUZGRUNUX1RZUEVfU3BlbGxQ",
            "cm90ZWN0b3IQ7AgSJQogU09VTkRfRUZGRUNUX1RZUEVfU3BlbGxCbG9vZFJh",
            "Z2UQ7QgSJQogU09VTkRfRUZGRUNUX1RZUEVfU3BlbGxTd2lmdEZvb3QQ7ggS",
            "KAojU09VTkRfRUZGRUNUX1RZUEVfU3BlbGxTaGFycHNob290ZXIQ7wgSIgod",
            "U09VTkRfRUZGRUNUX1RZUEVfU3BlbGxJZ25pdGUQ8ggSIQocU09VTkRfRUZG",
            "RUNUX1RZUEVfU3BlbGxDdXJzZRDzCBIlCiBTT1VORF9FRkZFQ1RfVFlQRV9T",
            "cGVsbEVsZWN0cmlmeRD0CBIoCiNTT1VORF9FRkZFQ1RfVFlQRV9TcGVsbElu",
            "ZmxpY3RXb3VuZBD1CBIjCh5TT1VORF9FRkZFQ1RfVFlQRV9TcGVsbEVudmVu",
            "b20Q9ggSJQogU09VTkRfRUZGRUNUX1RZUEVfU3BlbGxIb2x5Rmxhc2gQ9wgS",
            "KAojU09VTkRfRUZGRUNUX1RZUEVfU3BlbGxDdXJlQmxlZWRpbmcQ+AgSJwoi",
            "U09VTkRfRUZGRUNUX1RZUEVfU3BlbGxDdXJlQnVybmluZxD5CBIvCipTT1VO",
            "RF9FRkZFQ1RfVFlQRV9TcGVsbEN1cmVFbGVjdHJpZmljYXRpb24Q+ggSJQog",
            "U09VTkRfRUZGRUNUX1RZUEVfU3BlbGxDdXJlQ3Vyc2UQ+wgSKgolU09VTkRf",
            "RUZGRUNUX1RZUEVfU3BlbGxQaHlzaWNhbFN0cmlrZRD8CBIlCiBTT1VORF9F",
            "RkZFQ1RfVFlQRV9TcGVsbExpZ2h0bmluZxD9CBItCihTT1VORF9FRkZFQ1Rf",
            "VFlQRV9TcGVsbFN0cm9uZ0ZsYW1lU3RyaWtlEP4IEi4KKVNPVU5EX0VGRkVD",
            "VF9UWVBFX1NwZWxsU3Ryb25nRW5lcmd5U3RyaWtlEP8IEisKJlNPVU5EX0VG",
            "RkVDVF9UWVBFX1NwZWxsU3Ryb25nSWNlU3RyaWtlEIAJEi0KKFNPVU5EX0VG",
            "RkVDVF9UWVBFX1NwZWxsU3Ryb25nVGVycmFTdHJpa2UQgQkSLwoqU09VTkRf",
            "RUZGRUNUX1RZUEVfU3BlbGxVbHRpbWF0ZUZsYW1lU3RyaWtlEIIJEjAKK1NP",
            "VU5EX0VGRkVDVF9UWVBFX1NwZWxsVWx0aW1hdGVFbmVyZ3lTdHJpa2UQgwkS",
            "LQooU09VTkRfRUZGRUNUX1RZUEVfU3BlbGxVbHRpbWF0ZUljZVN0cmlrZRCE",
            "CRIvCipTT1VORF9FRkZFQ1RfVFlQRV9TcGVsbFVsdGltYXRlVGVycmFTdHJp",
            "a2UQhQkSMQosU09VTkRfRUZGRUNUX1RZUEVfU3BlbGxJbnRlbnNlV291bmRD",
            "bGVhbnNpbmcQhgkSJAofU09VTkRfRUZGRUNUX1RZUEVfU3BlbGxSZWNvdmVy",
            "eRCHCRIrCiZTT1VORF9FRkZFQ1RfVFlQRV9TcGVsbEludGVuc2VSZWNvdmVy",
            "eRCICRIrCiZTT1VORF9FRkZFQ1RfVFlQRV9TcGVsbFByYWN0aXNlSGVhbGlu",
            "ZxCOCRIsCidTT1VORF9FRkZFQ1RfVFlQRV9TcGVsbFByYWN0aXNlRmlyZVdh",
            "dmUQjwkSNAovU09VTkRfRUZGRUNUX1RZUEVfU3BlbGxQcmFjdGlzZU1hZ2lj",
            "TWlzc2lsZVJ1bmUQkAkSLQooU09VTkRfRUZGRUNUX1RZUEVfU3BlbGxBcHBy",
            "ZW50aWNlc1N0cmlrZRCRCRIlCiBTT1VORF9FRkZFQ1RfVFlQRV9TcGVsbE11",
            "ZEF0dGFjaxCUCRIkCh9TT1VORF9FRkZFQ1RfVFlQRV9TcGVsbENoaWxsT3V0",
            "EJUJEiYKIVNPVU5EX0VGRkVDVF9UWVBFX1NwZWxsTWFnaWNQYXRjaBCWCRIm",
            "CiFTT1VORF9FRkZFQ1RfVFlQRV9TcGVsbEJydWlzZUJhbmUQlwkSJQogU09V",
            "TkRfRUZGRUNUX1RZUEVfU3BlbGxBcnJvd0NhbGwQmAkSIAobU09VTkRfRUZG",
            "RUNUX1RZUEVfU3BlbGxCdXp6EJkJEiIKHVNPVU5EX0VGRkVDVF9UWVBFX1Nw",
            "ZWxsU2NvcmNoEJoJEi8KKlNPVU5EX0VGRkVDVF9UWVBFX1NwZWxsTGlnaHRl",
            "c3RNaXNzaWxlUnVuZRCbCRIwCitTT1VORF9FRkZFQ1RfVFlQRV9TcGVsbExp",
            "Z2h0U3RvbmVTaG93ZXJSdW5lEJwJEjAKK1NPVU5EX0VGRkVDVF9UWVBFX1Nw",
            "ZWxsU3VtbW9uS25pZ2h0RmFtaWxpYXIQqgkSMQosU09VTkRfRUZGRUNUX1RZ",
            "UEVfU3BlbGxTdW1tb25QYWxhZGluRmFtaWxpYXIQqwkSMgotU09VTkRfRUZG",
            "RUNUX1RZUEVfU3BlbGxTdW1tb25Tb3JjZXJlckZhbWlsaWFyEKwJEi8KKlNP",
            "VU5EX0VGRkVDVF9UWVBFX1NwZWxsU3VtbW9uRHJ1aWRGYW1pbGlhchCtCRIv",
            "CipTT1VORF9FRkZFQ1RfVFlQRV9TcGVsbENoaXZhbHJvdXNDaGFsbGVuZ2UQ",
            "1QkSKAojU09VTkRfRUZGRUNUX1RZUEVfU3BlbGxEaXZpbmVEYXp6bGUQ1gkS",
            "LgopU09VTkRfRUZGRUNUX1RZUEVfU3BlbGxGYWlyV291bmRDbGVhbnNpbmcQ",
            "1wkSKQokU09VTkRfRUZGRUNUX1RZUEVfU3BlbGxHcmVhdEZpcmVXYXZlENgJ",
            "EicKIlNPVU5EX0VGRkVDVF9UWVBFX1NwZWxsUmVzdG9yYXRpb24Q2QkSKgol",
            "U09VTkRfRUZGRUNUX1RZUEVfU3BlbGxOYXR1cmVzRW1icmFjZRDaCRIqCiVT",
            "T1VORF9FRkZFQ1RfVFlQRV9TcGVsbEV4cG9zZVdlYWtuZXNzENsJEicKIlNP",
            "VU5EX0VGRkVDVF9UWVBFX1NwZWxsU2FwU3RyZW5ndGgQ3AkSLQooU09VTkRf",
            "RUZGRUNUX1RZUEVfU3BlbGxDYW5jZWxNYWdpY1NoaWVsZBDdCRIzCi5TT1VO",
            "RF9FRkZFQ1RfVFlQRV9Nb25zdGVyU3BlbGxTaW5nbGVUYXJnZXRGaXJlENIP",
            "EjUKMFNPVU5EX0VGRkVDVF9UWVBFX01vbnN0ZXJTcGVsbFNpbmdsZVRhcmdl",
            "dEVuZXJneRDTDxI0Ci9TT1VORF9FRkZFQ1RfVFlQRV9Nb25zdGVyU3BlbGxT",
            "aW5nbGVUYXJnZXRFYXJ0aBDUDxIyCi1TT1VORF9FRkZFQ1RfVFlQRV9Nb25z",
            "dGVyU3BlbGxTaW5nbGVUYXJnZXRJY2UQ1Q8SNAovU09VTkRfRUZGRUNUX1RZ",
            "UEVfTW9uc3RlclNwZWxsU2luZ2xlVGFyZ2V0RGVhdGgQ1g8SMwouU09VTkRf",
            "RUZGRUNUX1RZUEVfTW9uc3RlclNwZWxsU2luZ2xlVGFyZ2V0SG9seRDXDxIy",
            "Ci1TT1VORF9FRkZFQ1RfVFlQRV9Nb25zdGVyU3BlbGxTaW5nbGVUYXJnZXRI",
            "aXQQ2A8SOAozU09VTkRfRUZGRUNUX1RZUEVfTW9uc3RlclNwZWxsU2luZ2xl",
            "VGFyZ2V0TGlmZURyYWluENkPEjgKM1NPVU5EX0VGRkVDVF9UWVBFX01vbnN0",
            "ZXJTcGVsbFNpbmdsZVRhcmdldE1hbmFEcmFpbhDaDxI3CjJTT1VORF9FRkZF",
            "Q1RfVFlQRV9Nb25zdGVyU3BlbGxTaW5nbGVUYXJnZXREcm93bmluZxDbDxI3",
            "CjJTT1VORF9FRkZFQ1RfVFlQRV9Nb25zdGVyU3BlbGxTaW5nbGVUYXJnZXRC",
            "bGVlZGluZxDcDxI2CjFTT1VORF9FRkZFQ1RfVFlQRV9Nb25zdGVyU3BlbGxT",
            "aW5nbGVUYXJnZXRIZWFsaW5nEN0PEjAKK1NPVU5EX0VGRkVDVF9UWVBFX01v",
            "bnN0ZXJTcGVsbFNtYWxsQXJlYUZpcmUQ3w8SMgotU09VTkRfRUZGRUNUX1RZ",
            "UEVfTW9uc3RlclNwZWxsU21hbGxBcmVhRW5lcmd5EOAPEjEKLFNPVU5EX0VG",
            "RkVDVF9UWVBFX01vbnN0ZXJTcGVsbFNtYWxsQXJlYUVhcnRoEOEPEi8KKlNP",
            "VU5EX0VGRkVDVF9UWVBFX01vbnN0ZXJTcGVsbFNtYWxsQXJlYUljZRDiDxIx",
            "CixTT1VORF9FRkZFQ1RfVFlQRV9Nb25zdGVyU3BlbGxTbWFsbEFyZWFEZWF0",
            "aBDjDxIwCitTT1VORF9FRkZFQ1RfVFlQRV9Nb25zdGVyU3BlbGxTbWFsbEFy",
            "ZWFIb2x5EOQPEi8KKlNPVU5EX0VGRkVDVF9UWVBFX01vbnN0ZXJTcGVsbFNt",
            "YWxsQXJlYUhpdBDlDxI1CjBTT1VORF9FRkZFQ1RfVFlQRV9Nb25zdGVyU3Bl",
            "bGxTbWFsbEFyZWFMaWZlRHJhaW4Q5g8SNQowU09VTkRfRUZGRUNUX1RZUEVf",
            "TW9uc3RlclNwZWxsU21hbGxBcmVhTWFuYURyYWluEOcPEjQKL1NPVU5EX0VG",
            "RkVDVF9UWVBFX01vbnN0ZXJTcGVsbFNtYWxsQXJlYURyb3duaW5nEOgPEjQK",
            "L1NPVU5EX0VGRkVDVF9UWVBFX01vbnN0ZXJTcGVsbFNtYWxsQXJlYUJsZWVk",
            "aW5nEOkPEjMKLlNPVU5EX0VGRkVDVF9UWVBFX01vbnN0ZXJTcGVsbFNtYWxs",
            "QXJlYUhlYWxpbmcQ6g8SMAorU09VTkRfRUZGRUNUX1RZUEVfTW9uc3RlclNw",
            "ZWxsTGFyZ2VBcmVhRmlyZRDsDxIyCi1TT1VORF9FRkZFQ1RfVFlQRV9Nb25z",
            "dGVyU3BlbGxMYXJnZUFyZWFFbmVyZ3kQ7Q8SMQosU09VTkRfRUZGRUNUX1RZ",
            "UEVfTW9uc3RlclNwZWxsTGFyZ2VBcmVhRWFydGgQ7g8SLwoqU09VTkRfRUZG",
            "RUNUX1RZUEVfTW9uc3RlclNwZWxsTGFyZ2VBcmVhSWNlEO8PEjEKLFNPVU5E",
            "X0VGRkVDVF9UWVBFX01vbnN0ZXJTcGVsbExhcmdlQXJlYURlYXRoEPAPEjAK",
            "K1NPVU5EX0VGRkVDVF9UWVBFX01vbnN0ZXJTcGVsbExhcmdlQXJlYUhvbHkQ",
            "8Q8SLwoqU09VTkRfRUZGRUNUX1RZUEVfTW9uc3RlclNwZWxsTGFyZ2VBcmVh",
            "SGl0EPIPEjUKMFNPVU5EX0VGRkVDVF9UWVBFX01vbnN0ZXJTcGVsbExhcmdl",
            "QXJlYUxpZmVEcmFpbhDzDxI1CjBTT1VORF9FRkZFQ1RfVFlQRV9Nb25zdGVy",
            "U3BlbGxMYXJnZUFyZWFNYW5hRHJhaW4Q9A8SNAovU09VTkRfRUZGRUNUX1RZ",
            "UEVfTW9uc3RlclNwZWxsTGFyZ2VBcmVhRHJvd25pbmcQ9Q8SNAovU09VTkRf",
            "RUZGRUNUX1RZUEVfTW9uc3RlclNwZWxsTGFyZ2VBcmVhQmxlZWRpbmcQ9g8S",
            "MwouU09VTkRfRUZGRUNUX1RZUEVfTW9uc3RlclNwZWxsTGFyZ2VBcmVhSGVh",
            "bGluZxD3DxIrCiZTT1VORF9FRkZFQ1RfVFlQRV9Nb25zdGVyU3BlbGxXYXZl",
            "RmlyZRD5DxItCihTT1VORF9FRkZFQ1RfVFlQRV9Nb25zdGVyU3BlbGxXYXZl",
            "RW5lcmd5EPoPEiwKJ1NPVU5EX0VGRkVDVF9UWVBFX01vbnN0ZXJTcGVsbFdh",
            "dmVFYXJ0aBD7DxIqCiVTT1VORF9FRkZFQ1RfVFlQRV9Nb25zdGVyU3BlbGxX",
            "YXZlSWNlEPwPEiwKJ1NPVU5EX0VGRkVDVF9UWVBFX01vbnN0ZXJTcGVsbFdh",
            "dmVEZWF0aBD9DxIrCiZTT1VORF9FRkZFQ1RfVFlQRV9Nb25zdGVyU3BlbGxX",
            "YXZlSG9seRD+DxIqCiVTT1VORF9FRkZFQ1RfVFlQRV9Nb25zdGVyU3BlbGxX",
            "YXZlSGl0EP8PEjAKK1NPVU5EX0VGRkVDVF9UWVBFX01vbnN0ZXJTcGVsbFdh",
            "dmVMaWZlRHJhaW4QgBASMAorU09VTkRfRUZGRUNUX1RZUEVfTW9uc3RlclNw",
            "ZWxsV2F2ZU1hbmFEcmFpbhCBEBIvCipTT1VORF9FRkZFQ1RfVFlQRV9Nb25z",
            "dGVyU3BlbGxXYXZlRHJvd25pbmcQghASLwoqU09VTkRfRUZGRUNUX1RZUEVf",
            "TW9uc3RlclNwZWxsV2F2ZUJsZWVkaW5nEIMQEi4KKVNPVU5EX0VGRkVDVF9U",
            "WVBFX01vbnN0ZXJTcGVsbFdhdmVIZWFsaW5nEIQQEi4KKVNPVU5EX0VGRkVD",
            "VF9UWVBFX01vbnN0ZXJTcGVsbERlbGV0ZUZpZWxkEIYQEiwKJ1NPVU5EX0VG",
            "RkVDVF9UWVBFX01vbnN0ZXJTcGVsbENoYWxsZW5nZRCHEBIoCiNTT1VORF9F",
            "RkZFQ1RfVFlQRV9Nb25zdGVyU3BlbGxTcGVlZBCIEBIqCiVTT1VORF9FRkZF",
            "Q1RfVFlQRV9Nb25zdGVyU3BlbGxEcnVua2VuEIkQEisKJlNPVU5EX0VGRkVD",
            "VF9UWVBFX01vbnN0ZXJTcGVsbFN0cmVuZ3RoEIoQEikKJFNPVU5EX0VGRkVD",
            "VF9UWVBFX01vbnN0ZXJTcGVsbE91dGZpdBCLEBIpCiRTT1VORF9FRkZFQ1Rf",
            "VFlQRV9Nb25zdGVyU3BlbGxTdW1tb24QjBASLQooU09VTkRfRUZGRUNUX1RZ",
            "UEVfTW9uc3RlclNwZWxsTWFnaWNMZXZlbBCNEBIrCiZTT1VORF9FRkZFQ1Rf",
            "VFlQRV9Nb25zdGVyU3BlbGxUZWxlcG9ydBCOEBImCiFTT1VORF9FRkZFQ1Rf",
            "VFlQRV9Nb25zdGVyU3BlbGxIZXgQjxASLwoqU09VTkRfRUZGRUNUX1RZUEVf",
            "TW9uc3RlclNwZWxsU3VwZXJEcnVua2VuEJAQEicKIlNPVU5EX0VGRkVDVF9U",
            "WVBFX01vbnN0ZXJTcGVsbFJvb3QQkRASJwoiU09VTkRfRUZGRUNUX1RZUEVf",
            "TW9uc3RlclNwZWxsRmVhchCSEBIzCi5TT1VORF9FRkZFQ1RfVFlQRV9Nb25z",
            "dGVyU3BlbGxIaWdoUmlza1RlbGVwb3J0EJMQEikKJFNPVU5EX0VGRkVDVF9U",
            "WVBFX01vbnN0ZXJTcGVsbE1pbmlvbhCUEBIoCiNTT1VORF9FRkZFQ1RfVFlQ",
            "RV9Nb25zdGVyU3BlbGxBZ29ueRCVEBIjCh5TT1VORF9FRkZFQ1RfVFlQRV9B",
            "bXBoaWJpY0JhcmsQxBMSJwoiU09VTkRfRUZGRUNUX1RZUEVfQXF1YXRpY0Jl",
            "YXN0QmFyaxDFExIpCiRTT1VORF9FRkZFQ1RfVFlQRV9BcXVhdGljQ3JpdHRl",
            "ckJhcmsQxhMSKgolU09VTkRfRUZGRUNUX1RZUEVfQXF1YXRpY0RlZXBsaW5n",
            "QmFyaxDHExInCiJTT1VORF9FRkZFQ1RfVFlQRV9BcXVhdGljUXVhcmFCYXJr",
            "EMgTEh8KGlNPVU5EX0VGRkVDVF9UWVBFX0JpcmRCYXJrEMkTEiQKH1NPVU5E",
            "X0VGRkVDVF9UWVBFX0NvbnN0cnVjdEJhcmsQyhMSIAobU09VTkRfRUZGRUNU",
            "X1RZUEVfRGVtb25CYXJrEMsTEiEKHFNPVU5EX0VGRkVDVF9UWVBFX0RyYWdv",
            "bkJhcmsQzBMSKQokU09VTkRfRUZGRUNUX1RZUEVfRWxlbWVudGFsRWFydGhC",
            "YXJrEM0TEioKJVNPVU5EX0VGRkVDVF9UWVBFX0VsZW1lbnRhbEVuZXJneUJh",
            "cmsQzhMSKAojU09VTkRfRUZGRUNUX1RZUEVfRWxlbWVudGFsRmlyZUJhcmsQ",
            "zxMSKQokU09VTkRfRUZGRUNUX1RZUEVfRWxlbWVudGFsV2F0ZXJCYXJrENAT",
            "EjAKK1NPVU5EX0VGRkVDVF9UWVBFX0V4dHJhRGltZW5zaW9uYWxCZWFzdEJh",
            "cmsQ0RMSMQosU09VTkRfRUZGRUNUX1RZUEVfRXh0cmFEaW1lbnNpb25hbEVu",
            "ZXJneUJhcmsQ0hMSMQosU09VTkRfRUZGRUNUX1RZUEVfRXh0cmFEaW1lbnNp",
            "b25hbEhvcnJvckJhcmsQ0xMSHgoZU09VTkRfRUZGRUNUX1RZUEVfRmV5QmFy",
            "axDUExIgChtTT1VORF9FRkZFQ1RfVFlQRV9HaWFudEJhcmsQ1RMSJgohU09V",
            "TkRfRUZGRUNUX1RZUEVfSHVtYW5GZW1hbGVCYXJrENYTEiQKH1NPVU5EX0VG",
            "RkVDVF9UWVBFX0h1bWFuTWFsZUJhcmsQ1xMSKQokU09VTkRfRUZGRUNUX1RZ",
            "UEVfSHVtYW5vaWRHb2JsaW5CYXJrENgTEiYKIVNPVU5EX0VGRkVDVF9UWVBF",
            "X0h1bWFub2lkT3JjQmFyaxDZExImCiFTT1VORF9FRkZFQ1RfVFlQRV9MeWNh",
            "bnRocm9wZUJhcmsQ2hMSKAojU09VTkRfRUZGRUNUX1RZUEVfTWFnaWNhbEVu",
            "ZXJneUJhcmsQ2xMSKAojU09VTkRfRUZGRUNUX1RZUEVfTWFnaWNhbEhvcnJv",
            "ckJhcmsQ3BMSJQogU09VTkRfRUZGRUNUX1RZUEVfTWFtbWFsQmVhckJhcmsQ",
            "3RMSKAojU09VTkRfRUZGRUNUX1RZUEVfTWFtbWFsQ3JpdHRlckJhcmsQ3hMS",
            "JAofU09VTkRfRUZGRUNUX1RZUEVfTWFtbWFsRG9nQmFyaxDfExIpCiRTT1VO",
            "RF9FRkZFQ1RfVFlQRV9NYW1tYWxFbGVwaGFudEJhcmsQ4BMSJgohU09VTkRf",
            "RUZGRUNUX1RZUEVfTWFtbWFsRmVyYWxCYXJrEOETEiYKIVNPVU5EX0VGRkVD",
            "VF9UWVBFX01hbW1hbEhvcnNlQmFyaxDiExIoCiNTT1VORF9FRkZFQ1RfVFlQ",
            "RV9NYW1tYWxNYW1tb3RoQmFyaxDjExIiCh1TT1VORF9FRkZFQ1RfVFlQRV9N",
            "b25zdGVyQmFyaxDkExIiCh1TT1VORF9FRkZFQ1RfVFlQRV9QaGFudG9tQmFy",
            "axDlExIgChtTT1VORF9FRkZFQ1RfVFlQRV9QbGFudEJhcmsQ5hMSJwoiU09V",
            "TkRfRUZGRUNUX1RZUEVfUmVwdGlsZUxhcmdlQmFyaxDnExInCiJTT1VORF9F",
            "RkZFQ1RfVFlQRV9SZXB0aWxlU21hbGxCYXJrEOgTEiAKG1NPVU5EX0VGRkVD",
            "VF9UWVBFX1NsaW1lQmFyaxDpExIhChxTT1VORF9FRkZFQ1RfVFlQRV9VbmRl",
            "YWRCYXJrEOoTEigKI1NPVU5EX0VGRkVDVF9UWVBFX1Zlcm1pbkNyaXR0ZXJC",
            "YXJrEOsTEicKIlNPVU5EX0VGRkVDVF9UWVBFX1Zlcm1pbkluc2VjdEJhcmsQ",
            "7BMSKAojU09VTkRfRUZGRUNUX1RZUEVfVmVybWluUm90d29ybUJhcmsQ7RMS",
            "JAofU09VTkRfRUZGRUNUX1RZUEVfSHVtYW5TYWdlQmFyaxDuExIlCiBTT1VO",
            "RF9FRkZFQ1RfVFlQRV9IdW1hbkNyb25lQmFyaxDvExIeChlTT1VORF9FRkZF",
            "Q1RfVFlQRV9BcGVCYXJrEPATEiQKH1NPVU5EX0VGRkVDVF9UWVBFX0FtcGhp",
            "YmljRGVhdGgQqBQSKAojU09VTkRfRUZGRUNUX1RZUEVfQXF1YXRpY0JlYXN0",
            "RGVhdGgQqRQSKgolU09VTkRfRUZGRUNUX1RZUEVfQXF1YXRpY0NyaXR0ZXJE",
            "ZWF0aBCqFBIrCiZTT1VORF9FRkZFQ1RfVFlQRV9BcXVhdGljRGVlcGxpbmdE",
            "ZWF0aBCrFBIoCiNTT1VORF9FRkZFQ1RfVFlQRV9BcXVhdGljUXVhcmFEZWF0",
            "aBCsFBIgChtTT1VORF9FRkZFQ1RfVFlQRV9CaXJkRGVhdGgQrRQSJQogU09V",
            "TkRfRUZGRUNUX1RZUEVfQ29uc3RydWN0RGVhdGgQrhQSIQocU09VTkRfRUZG",
            "RUNUX1RZUEVfRGVtb25EZWF0aBCvFBIiCh1TT1VORF9FRkZFQ1RfVFlQRV9E",
            "cmFnb25EZWF0aBCwFBIqCiVTT1VORF9FRkZFQ1RfVFlQRV9FbGVtZW50YWxF",
            "YXJ0aERlYXRoELEUEisKJlNPVU5EX0VGRkVDVF9UWVBFX0VsZW1lbnRhbEVu",
            "ZXJneURlYXRoELIUEikKJFNPVU5EX0VGRkVDVF9UWVBFX0VsZW1lbnRhbEZp",
            "cmVEZWF0aBCzFBIqCiVTT1VORF9FRkZFQ1RfVFlQRV9FbGVtZW50YWxXYXRl",
            "ckRlYXRoELQUEjEKLFNPVU5EX0VGRkVDVF9UWVBFX0V4dHJhRGltZW5zaW9u",
            "YWxCZWFzdERlYXRoELUUEjIKLVNPVU5EX0VGRkVDVF9UWVBFX0V4dHJhRGlt",
            "ZW5zaW9uYWxFbmVyZ3lEZWF0aBC2FBIyCi1TT1VORF9FRkZFQ1RfVFlQRV9F",
            "eHRyYURpbWVuc2lvbmFsSG9ycm9yRGVhdGgQtxQSHwoaU09VTkRfRUZGRUNU",
            "X1RZUEVfRmV5RGVhdGgQuBQSIQocU09VTkRfRUZGRUNUX1RZUEVfR2lhbnRE",
            "ZWF0aBC5FBInCiJTT1VORF9FRkZFQ1RfVFlQRV9IdW1hbkZlbWFsZURlYXRo",
            "ELoUEiUKIFNPVU5EX0VGRkVDVF9UWVBFX0h1bWFuTWFsZURlYXRoELsUEioK",
            "JVNPVU5EX0VGRkVDVF9UWVBFX0h1bWFub2lkR29ibGluRGVhdGgQvBQSJwoi",
            "U09VTkRfRUZGRUNUX1RZUEVfSHVtYW5vaWRPcmNEZWF0aBC9FBInCiJTT1VO",
            "RF9FRkZFQ1RfVFlQRV9MeWNhbnRocm9wZURlYXRoEL4UEikKJFNPVU5EX0VG",
            "RkVDVF9UWVBFX01hZ2ljYWxFbmVyZ3lEZWF0aBC/FBIpCiRTT1VORF9FRkZF",
            "Q1RfVFlQRV9NYWdpY2FsSG9ycm9yRGVhdGgQwBQSJgohU09VTkRfRUZGRUNU",
            "X1RZUEVfTWFtbWFsQmVhckRlYXRoEMEUEikKJFNPVU5EX0VGRkVDVF9UWVBF",
            "X01hbW1hbENyaXR0ZXJEZWF0aBDCFBIlCiBTT1VORF9FRkZFQ1RfVFlQRV9N",
            "YW1tYWxEb2dEZWF0aBDDFBIqCiVTT1VORF9FRkZFQ1RfVFlQRV9NYW1tYWxF",
            "bGVwaGFudERlYXRoEMQUEicKIlNPVU5EX0VGRkVDVF9UWVBFX01hbW1hbEZl",
            "cmFsRGVhdGgQxRQSJwoiU09VTkRfRUZGRUNUX1RZUEVfTWFtbWFsSG9yc2VE",
            "ZWF0aBDGFBIpCiRTT1VORF9FRkZFQ1RfVFlQRV9NYW1tYWxNYW1tb3RoRGVh",
            "dGgQxxQSIwoeU09VTkRfRUZGRUNUX1RZUEVfTW9uc3RlckRlYXRoEMgUEiMK",
            "HlNPVU5EX0VGRkVDVF9UWVBFX1BoYW50b21EZWF0aBDJFBIhChxTT1VORF9F",
            "RkZFQ1RfVFlQRV9QbGFudERlYXRoEMoUEigKI1NPVU5EX0VGRkVDVF9UWVBF",
            "X1JlcHRpbGVMYXJnZURlYXRoEMsUEigKI1NPVU5EX0VGRkVDVF9UWVBFX1Jl",
            "cHRpbGVTbWFsbERlYXRoEMwUEiEKHFNPVU5EX0VGRkVDVF9UWVBFX1NsaW1l",
            "RGVhdGgQzRQSIgodU09VTkRfRUZGRUNUX1RZUEVfVW5kZWFkRGVhdGgQzhQS",
            "KQokU09VTkRfRUZGRUNUX1RZUEVfVmVybWluQ3JpdHRlckRlYXRoEM8UEigK",
            "I1NPVU5EX0VGRkVDVF9UWVBFX1Zlcm1pbkluc2VjdERlYXRoENAUEikKJFNP",
            "VU5EX0VGRkVDVF9UWVBFX1Zlcm1pblJvdHdvcm1EZWF0aBDRFBIlCiBTT1VO",
            "RF9FRkZFQ1RfVFlQRV9IdW1hblNhZ2VEZWF0aBDSFBImCiFTT1VORF9FRkZF",
            "Q1RfVFlQRV9IdW1hbkNyb25lRGVhdGgQ0xQSHwoaU09VTkRfRUZGRUNUX1RZ",
            "UEVfQXBlRGVhdGgQ1BQSLgopU09VTkRfRUZGRUNUX1RZUEVfR29kc3BlbGxL",
            "aWxsQWxsTW9uc3RlcnMQkU4="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Soundbank.ENumericSoundType), typeof(global::Soundbank.EMusicType), typeof(global::Soundbank.ESoundEffectType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Soundbank.Sounds), global::Soundbank.Sounds.Parser, new[]{ "Sound", "NumericSoundEffect", "AmbienceStream", "AmbienceObjectStream", "MusicTemplate" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Soundbank.Sound), global::Soundbank.Sound.Parser, new[]{ "Id", "Filename", "OriginalFilename", "IsStream" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Soundbank.NumericSoundEffect), global::Soundbank.NumericSoundEffect.Parser, new[]{ "Id", "NumericSoundType", "RandomPitch", "RandomVolume", "SimpleSoundEffect", "RandomSoundEffect" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Soundbank.AmbienceStream), global::Soundbank.AmbienceStream.Parser, new[]{ "Id", "LoopingSoundId", "DelayedEffects" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Soundbank.AmbienceObjectStream), global::Soundbank.AmbienceObjectStream.Parser, new[]{ "Id", "CountedAppearanceTypes", "SoundEffects", "MaxSoundDistance" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Soundbank.MusicTemplate), global::Soundbank.MusicTemplate.Parser, new[]{ "Id", "SoundId", "MusicType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Soundbank.SimpleSoundEffect), global::Soundbank.SimpleSoundEffect.Parser, new[]{ "SoundId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Soundbank.RandomSoundEffect), global::Soundbank.RandomSoundEffect.Parser, new[]{ "RandomSoundId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Soundbank.DelayedSoundEffect), global::Soundbank.DelayedSoundEffect.Parser, new[]{ "NumericSoundEffectId", "DelaySeconds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Soundbank.AppearanceTypesCountSoundEffect), global::Soundbank.AppearanceTypesCountSoundEffect.Parser, new[]{ "Count", "LoopingSoundId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Soundbank.MinMaxFloat), global::Soundbank.MinMaxFloat.Parser, new[]{ "Min", "Max" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum ENumericSoundType {
    [pbr::OriginalName("NUMERIC_SOUND_TYPE_UNKNOWN")] NumericSoundTypeUnknown = 0,
    [pbr::OriginalName("NUMERIC_SOUND_TYPE_SPELL_ATTACK")] NumericSoundTypeSpellAttack = 1,
    [pbr::OriginalName("NUMERIC_SOUND_TYPE_SPELL_HEALING")] NumericSoundTypeSpellHealing = 2,
    [pbr::OriginalName("NUMERIC_SOUND_TYPE_SPELL_SUPPORT")] NumericSoundTypeSpellSupport = 3,
    [pbr::OriginalName("NUMERIC_SOUND_TYPE_WEAPON_ATTACK")] NumericSoundTypeWeaponAttack = 4,
    [pbr::OriginalName("NUMERIC_SOUND_TYPE_CREATURE_NOISE")] NumericSoundTypeCreatureNoise = 5,
    [pbr::OriginalName("NUMERIC_SOUND_TYPE_CREATURE_DEATH")] NumericSoundTypeCreatureDeath = 6,
    [pbr::OriginalName("NUMERIC_SOUND_TYPE_CREATURE_ATTACK")] NumericSoundTypeCreatureAttack = 7,
    [pbr::OriginalName("NUMERIC_SOUND_TYPE_AMBIENCE_STREAM")] NumericSoundTypeAmbienceStream = 8,
    [pbr::OriginalName("NUMERIC_SOUND_TYPE_FOOD_AND_DRINK")] NumericSoundTypeFoodAndDrink = 9,
    [pbr::OriginalName("NUMERIC_SOUND_TYPE_ITEM_MOVEMENT")] NumericSoundTypeItemMovement = 10,
    [pbr::OriginalName("NUMERIC_SOUND_TYPE_EVENT")] NumericSoundTypeEvent = 11,
    [pbr::OriginalName("NUMERIC_SOUND_TYPE_UI")] NumericSoundTypeUi = 12,
    [pbr::OriginalName("NUMERIC_SOUND_TYPE_WHISPER_WITHOUT_OPEN_CHAT")] NumericSoundTypeWhisperWithoutOpenChat = 13,
    [pbr::OriginalName("NUMERIC_SOUND_TYPE_CHAT_MESSAGE")] NumericSoundTypeChatMessage = 14,
    [pbr::OriginalName("NUMERIC_SOUND_TYPE_PARTY")] NumericSoundTypeParty = 15,
    [pbr::OriginalName("NUMERIC_SOUND_TYPE_VIP_LIST")] NumericSoundTypeVipList = 16,
    [pbr::OriginalName("NUMERIC_SOUND_TYPE_RAID_ANNOUNCEMENT")] NumericSoundTypeRaidAnnouncement = 17,
    [pbr::OriginalName("NUMERIC_SOUND_TYPE_SERVER_MESSAGE")] NumericSoundTypeServerMessage = 18,
    [pbr::OriginalName("NUMERIC_SOUND_TYPE_SPELL_GENERIC")] NumericSoundTypeSpellGeneric = 19,
  }

  public enum EMusicType {
    [pbr::OriginalName("MUSIC_TYPE_UNKNOWN")] MusicTypeUnknown = 0,
    [pbr::OriginalName("MUSIC_TYPE_MUSIC")] MusicTypeMusic = 1,
    [pbr::OriginalName("MUSIC_TYPE_MUSIC_IMMEDIATE")] MusicTypeMusicImmediate = 2,
    [pbr::OriginalName("MUSIC_TYPE_MUSIC_TITLE")] MusicTypeMusicTitle = 3,
  }

  public enum ESoundEffectType {
    [pbr::OriginalName("SOUND_EFFECT_TYPE_Silence")] SoundEffectTypeSilence = 0,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_HumanCloseAttackFist")] SoundEffectTypeHumanCloseAttackFist = 1,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MonsterCloseAttackFist")] SoundEffectTypeMonsterCloseAttackFist = 2,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_CloseAttackSword")] SoundEffectTypeCloseAttackSword = 3,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_CloseAttackClub")] SoundEffectTypeCloseAttackClub = 4,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_CloseAttackAxe")] SoundEffectTypeCloseAttackAxe = 5,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_DistAttackBow")] SoundEffectTypeDistAttackBow = 6,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_DistAttackCrossbow")] SoundEffectTypeDistAttackCrossbow = 7,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_DistAttackThrow")] SoundEffectTypeDistAttackThrow = 8,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MagicalRangeAttack")] SoundEffectTypeMagicalRangeAttack = 9,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellOrRune")] SoundEffectTypeSpellOrRune = 10,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_Other")] SoundEffectTypeOther = 11,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_PhysicalRangeMiss")] SoundEffectTypePhysicalRangeMiss = 12,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_DistAttackBowShot")] SoundEffectTypeDistAttackBowShot = 13,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_DistAttackCrossBowShot")] SoundEffectTypeDistAttackCrossBowShot = 14,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_DistAttackThrowShot")] SoundEffectTypeDistAttackThrowShot = 15,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_DistAttackRodShot")] SoundEffectTypeDistAttackRodShot = 16,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_DistAttackWandShot")] SoundEffectTypeDistAttackWandShot = 17,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_BurstArrowEffect")] SoundEffectTypeBurstArrowEffect = 18,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_DiamondArrowEffect")] SoundEffectTypeDiamondArrowEffect = 19,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_NoDamage")] SoundEffectTypeNoDamage = 20,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MonsterMeleeAttackFist")] SoundEffectTypeMonsterMeleeAttackFist = 100,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MonsterMeleeAttackClaw")] SoundEffectTypeMonsterMeleeAttackClaw = 101,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MonsterMeleeAttackBite")] SoundEffectTypeMonsterMeleeAttackBite = 102,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MonsterMeleeAttackRip")] SoundEffectTypeMonsterMeleeAttackRip = 103,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MonsterMeleeAttackAcid")] SoundEffectTypeMonsterMeleeAttackAcid = 104,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MonsterMeleeAttackMagic")] SoundEffectTypeMonsterMeleeAttackMagic = 105,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MonsterMeleeAttackEthereal")] SoundEffectTypeMonsterMeleeAttackEthereal = 106,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MonsterMeleeAttackConstruct")] SoundEffectTypeMonsterMeleeAttackConstruct = 107,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellLightHealing")] SoundEffectTypeSpellLightHealing = 1001,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellIntenseHealing")] SoundEffectTypeSpellIntenseHealing = 1002,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellUltimateHealing")] SoundEffectTypeSpellUltimateHealing = 1003,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellIntenseHealingRune")] SoundEffectTypeSpellIntenseHealingRune = 1004,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellUltimateHealingRune")] SoundEffectTypeSpellUltimateHealingRune = 1005,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellHaste")] SoundEffectTypeSpellHaste = 1006,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellLightMagicMissileRune")] SoundEffectTypeSpellLightMagicMissileRune = 1007,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellHeavyMagicMissileRune")] SoundEffectTypeSpellHeavyMagicMissileRune = 1008,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellSummonCreature")] SoundEffectTypeSpellSummonCreature = 1009,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellLight")] SoundEffectTypeSpellLight = 1010,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellGreatLight")] SoundEffectTypeSpellGreatLight = 1011,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellConvinceCreatureRune")] SoundEffectTypeSpellConvinceCreatureRune = 1012,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellEnergyWave")] SoundEffectTypeSpellEnergyWave = 1013,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellChameleonRune")] SoundEffectTypeSpellChameleonRune = 1014,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellFireballRune")] SoundEffectTypeSpellFireballRune = 1015,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellGreatFireballRune")] SoundEffectTypeSpellGreatFireballRune = 1016,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellFireBombRune")] SoundEffectTypeSpellFireBombRune = 1017,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellExplosionRune")] SoundEffectTypeSpellExplosionRune = 1018,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellFireWave")] SoundEffectTypeSpellFireWave = 1019,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellFindPerson")] SoundEffectTypeSpellFindPerson = 1020,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellSuddenDeathRune")] SoundEffectTypeSpellSuddenDeathRune = 1021,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellEnergyBeam")] SoundEffectTypeSpellEnergyBeam = 1022,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellGreatEnergyBeam")] SoundEffectTypeSpellGreatEnergyBeam = 1023,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellHellsCore")] SoundEffectTypeSpellHellsCore = 1024,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellFireFieldRune")] SoundEffectTypeSpellFireFieldRune = 1025,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellPoisonFieldRune")] SoundEffectTypeSpellPoisonFieldRune = 1026,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellEnergyFieldRune")] SoundEffectTypeSpellEnergyFieldRune = 1027,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellFireWallRune")] SoundEffectTypeSpellFireWallRune = 1028,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellCurePoison")] SoundEffectTypeSpellCurePoison = 1029,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellDestroyFieldRune")] SoundEffectTypeSpellDestroyFieldRune = 1030,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellCurePoisonRune")] SoundEffectTypeSpellCurePoisonRune = 1031,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellPoisonWallRune")] SoundEffectTypeSpellPoisonWallRune = 1032,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellEnergyWallRune")] SoundEffectTypeSpellEnergyWallRune = 1033,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellSalvation")] SoundEffectTypeSpellSalvation = 1036,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellCreatureIllusion")] SoundEffectTypeSpellCreatureIllusion = 1038,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellStrongHaste")] SoundEffectTypeSpellStrongHaste = 1039,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellFood")] SoundEffectTypeSpellFood = 1042,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellStrongIceWave")] SoundEffectTypeSpellStrongIceWave = 1043,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellMagicShield")] SoundEffectTypeSpellMagicShield = 1044,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellInvisible")] SoundEffectTypeSpellInvisible = 1045,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellConjureExplosiveArrow")] SoundEffectTypeSpellConjureExplosiveArrow = 1049,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellSoulfireRune")] SoundEffectTypeSpellSoulfireRune = 1050,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellConjureArrow")] SoundEffectTypeSpellConjureArrow = 1051,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellParalyseRune")] SoundEffectTypeSpellParalyseRune = 1054,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellEnergyBombRune")] SoundEffectTypeSpellEnergyBombRune = 1055,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellWrathOfNature")] SoundEffectTypeSpellWrathOfNature = 1056,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellStrongEtherealSpear")] SoundEffectTypeSpellStrongEtherealSpear = 1057,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellFrontSweep")] SoundEffectTypeSpellFrontSweep = 1059,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellBrutalStrike")] SoundEffectTypeSpellBrutalStrike = 1061,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellAnnihilation")] SoundEffectTypeSpellAnnihilation = 1062,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellInviteGuests")] SoundEffectTypeSpellInviteGuests = 1071,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellInviteSubowners")] SoundEffectTypeSpellInviteSubowners = 1072,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellKickGuest")] SoundEffectTypeSpellKickGuest = 1073,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellEditDoor")] SoundEffectTypeSpellEditDoor = 1074,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellUltimateLight")] SoundEffectTypeSpellUltimateLight = 1075,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellMagicRope")] SoundEffectTypeSpellMagicRope = 1076,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellStalagmiteRune")] SoundEffectTypeSpellStalagmiteRune = 1077,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellDisintegrateRune")] SoundEffectTypeSpellDisintegrateRune = 1078,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellBerserk")] SoundEffectTypeSpellBerserk = 1080,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellLevitate")] SoundEffectTypeSpellLevitate = 1081,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellMassHealing")] SoundEffectTypeSpellMassHealing = 1082,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellAnimateDeadRune")] SoundEffectTypeSpellAnimateDeadRune = 1083,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellHealFriend")] SoundEffectTypeSpellHealFriend = 1084,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellUndeadLegion")] SoundEffectTypeSpellUndeadLegion = 1085,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellMagicWallRune")] SoundEffectTypeSpellMagicWallRune = 1086,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellDeathStrike")] SoundEffectTypeSpellDeathStrike = 1087,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellEnergyStrike")] SoundEffectTypeSpellEnergyStrike = 1088,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellFlameStrike")] SoundEffectTypeSpellFlameStrike = 1089,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellCancelInvisibility")] SoundEffectTypeSpellCancelInvisibility = 1090,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellPoisonBombRune")] SoundEffectTypeSpellPoisonBombRune = 1091,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellConjureWandOfDarkness")] SoundEffectTypeSpellConjureWandOfDarkness = 1092,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellChallenge")] SoundEffectTypeSpellChallenge = 1093,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellWildGrowthRune")] SoundEffectTypeSpellWildGrowthRune = 1094,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellFierceBerserk")] SoundEffectTypeSpellFierceBerserk = 1105,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellGroundshaker")] SoundEffectTypeSpellGroundshaker = 1106,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellWhirlwindThrow")] SoundEffectTypeSpellWhirlwindThrow = 1107,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellEnchantSpear")] SoundEffectTypeSpellEnchantSpear = 1110,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellEtherealSpear")] SoundEffectTypeSpellEtherealSpear = 1111,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellIceStrike")] SoundEffectTypeSpellIceStrike = 1112,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellTerraStrike")] SoundEffectTypeSpellTerraStrike = 1113,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellIcicleRune")] SoundEffectTypeSpellIcicleRune = 1114,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellAvalancheRune")] SoundEffectTypeSpellAvalancheRune = 1115,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellStoneShowerRune")] SoundEffectTypeSpellStoneShowerRune = 1116,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellThunderstormRune")] SoundEffectTypeSpellThunderstormRune = 1117,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellEternalWinter")] SoundEffectTypeSpellEternalWinter = 1118,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellRageOfTheSkies")] SoundEffectTypeSpellRageOfTheSkies = 1119,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellTerraWave")] SoundEffectTypeSpellTerraWave = 1120,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellIceWave")] SoundEffectTypeSpellIceWave = 1121,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellDivineMissile")] SoundEffectTypeSpellDivineMissile = 1122,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellWoundCleansing")] SoundEffectTypeSpellWoundCleansing = 1123,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellDivineCaldera")] SoundEffectTypeSpellDivineCaldera = 1124,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellDivineHealing")] SoundEffectTypeSpellDivineHealing = 1125,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellTrainParty")] SoundEffectTypeSpellTrainParty = 1126,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellProtectParty")] SoundEffectTypeSpellProtectParty = 1127,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellHealParty")] SoundEffectTypeSpellHealParty = 1128,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellEnchantParty")] SoundEffectTypeSpellEnchantParty = 1129,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellHolyMissileRune")] SoundEffectTypeSpellHolyMissileRune = 1130,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellCharge")] SoundEffectTypeSpellCharge = 1131,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellProtector")] SoundEffectTypeSpellProtector = 1132,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellBloodRage")] SoundEffectTypeSpellBloodRage = 1133,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellSwiftFoot")] SoundEffectTypeSpellSwiftFoot = 1134,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellSharpshooter")] SoundEffectTypeSpellSharpshooter = 1135,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellIgnite")] SoundEffectTypeSpellIgnite = 1138,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellCurse")] SoundEffectTypeSpellCurse = 1139,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellElectrify")] SoundEffectTypeSpellElectrify = 1140,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellInflictWound")] SoundEffectTypeSpellInflictWound = 1141,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellEnvenom")] SoundEffectTypeSpellEnvenom = 1142,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellHolyFlash")] SoundEffectTypeSpellHolyFlash = 1143,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellCureBleeding")] SoundEffectTypeSpellCureBleeding = 1144,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellCureBurning")] SoundEffectTypeSpellCureBurning = 1145,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellCureElectrification")] SoundEffectTypeSpellCureElectrification = 1146,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellCureCurse")] SoundEffectTypeSpellCureCurse = 1147,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellPhysicalStrike")] SoundEffectTypeSpellPhysicalStrike = 1148,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellLightning")] SoundEffectTypeSpellLightning = 1149,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellStrongFlameStrike")] SoundEffectTypeSpellStrongFlameStrike = 1150,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellStrongEnergyStrike")] SoundEffectTypeSpellStrongEnergyStrike = 1151,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellStrongIceStrike")] SoundEffectTypeSpellStrongIceStrike = 1152,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellStrongTerraStrike")] SoundEffectTypeSpellStrongTerraStrike = 1153,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellUltimateFlameStrike")] SoundEffectTypeSpellUltimateFlameStrike = 1154,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellUltimateEnergyStrike")] SoundEffectTypeSpellUltimateEnergyStrike = 1155,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellUltimateIceStrike")] SoundEffectTypeSpellUltimateIceStrike = 1156,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellUltimateTerraStrike")] SoundEffectTypeSpellUltimateTerraStrike = 1157,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellIntenseWoundCleansing")] SoundEffectTypeSpellIntenseWoundCleansing = 1158,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellRecovery")] SoundEffectTypeSpellRecovery = 1159,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellIntenseRecovery")] SoundEffectTypeSpellIntenseRecovery = 1160,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellPractiseHealing")] SoundEffectTypeSpellPractiseHealing = 1166,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellPractiseFireWave")] SoundEffectTypeSpellPractiseFireWave = 1167,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellPractiseMagicMissileRune")] SoundEffectTypeSpellPractiseMagicMissileRune = 1168,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellApprenticesStrike")] SoundEffectTypeSpellApprenticesStrike = 1169,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellMudAttack")] SoundEffectTypeSpellMudAttack = 1172,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellChillOut")] SoundEffectTypeSpellChillOut = 1173,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellMagicPatch")] SoundEffectTypeSpellMagicPatch = 1174,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellBruiseBane")] SoundEffectTypeSpellBruiseBane = 1175,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellArrowCall")] SoundEffectTypeSpellArrowCall = 1176,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellBuzz")] SoundEffectTypeSpellBuzz = 1177,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellScorch")] SoundEffectTypeSpellScorch = 1178,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellLightestMissileRune")] SoundEffectTypeSpellLightestMissileRune = 1179,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellLightStoneShowerRune")] SoundEffectTypeSpellLightStoneShowerRune = 1180,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellSummonKnightFamiliar")] SoundEffectTypeSpellSummonKnightFamiliar = 1194,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellSummonPaladinFamiliar")] SoundEffectTypeSpellSummonPaladinFamiliar = 1195,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellSummonSorcererFamiliar")] SoundEffectTypeSpellSummonSorcererFamiliar = 1196,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellSummonDruidFamiliar")] SoundEffectTypeSpellSummonDruidFamiliar = 1197,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellChivalrousChallenge")] SoundEffectTypeSpellChivalrousChallenge = 1237,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellDivineDazzle")] SoundEffectTypeSpellDivineDazzle = 1238,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellFairWoundCleansing")] SoundEffectTypeSpellFairWoundCleansing = 1239,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellGreatFireWave")] SoundEffectTypeSpellGreatFireWave = 1240,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellRestoration")] SoundEffectTypeSpellRestoration = 1241,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellNaturesEmbrace")] SoundEffectTypeSpellNaturesEmbrace = 1242,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellExposeWeakness")] SoundEffectTypeSpellExposeWeakness = 1243,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellSapStrength")] SoundEffectTypeSpellSapStrength = 1244,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SpellCancelMagicShield")] SoundEffectTypeSpellCancelMagicShield = 1245,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MonsterSpellSingleTargetFire")] SoundEffectTypeMonsterSpellSingleTargetFire = 2002,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MonsterSpellSingleTargetEnergy")] SoundEffectTypeMonsterSpellSingleTargetEnergy = 2003,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MonsterSpellSingleTargetEarth")] SoundEffectTypeMonsterSpellSingleTargetEarth = 2004,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MonsterSpellSingleTargetIce")] SoundEffectTypeMonsterSpellSingleTargetIce = 2005,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MonsterSpellSingleTargetDeath")] SoundEffectTypeMonsterSpellSingleTargetDeath = 2006,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MonsterSpellSingleTargetHoly")] SoundEffectTypeMonsterSpellSingleTargetHoly = 2007,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MonsterSpellSingleTargetHit")] SoundEffectTypeMonsterSpellSingleTargetHit = 2008,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MonsterSpellSingleTargetLifeDrain")] SoundEffectTypeMonsterSpellSingleTargetLifeDrain = 2009,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MonsterSpellSingleTargetManaDrain")] SoundEffectTypeMonsterSpellSingleTargetManaDrain = 2010,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MonsterSpellSingleTargetDrowning")] SoundEffectTypeMonsterSpellSingleTargetDrowning = 2011,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MonsterSpellSingleTargetBleeding")] SoundEffectTypeMonsterSpellSingleTargetBleeding = 2012,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MonsterSpellSingleTargetHealing")] SoundEffectTypeMonsterSpellSingleTargetHealing = 2013,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MonsterSpellSmallAreaFire")] SoundEffectTypeMonsterSpellSmallAreaFire = 2015,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MonsterSpellSmallAreaEnergy")] SoundEffectTypeMonsterSpellSmallAreaEnergy = 2016,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MonsterSpellSmallAreaEarth")] SoundEffectTypeMonsterSpellSmallAreaEarth = 2017,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MonsterSpellSmallAreaIce")] SoundEffectTypeMonsterSpellSmallAreaIce = 2018,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MonsterSpellSmallAreaDeath")] SoundEffectTypeMonsterSpellSmallAreaDeath = 2019,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MonsterSpellSmallAreaHoly")] SoundEffectTypeMonsterSpellSmallAreaHoly = 2020,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MonsterSpellSmallAreaHit")] SoundEffectTypeMonsterSpellSmallAreaHit = 2021,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MonsterSpellSmallAreaLifeDrain")] SoundEffectTypeMonsterSpellSmallAreaLifeDrain = 2022,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MonsterSpellSmallAreaManaDrain")] SoundEffectTypeMonsterSpellSmallAreaManaDrain = 2023,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MonsterSpellSmallAreaDrowning")] SoundEffectTypeMonsterSpellSmallAreaDrowning = 2024,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MonsterSpellSmallAreaBleeding")] SoundEffectTypeMonsterSpellSmallAreaBleeding = 2025,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MonsterSpellSmallAreaHealing")] SoundEffectTypeMonsterSpellSmallAreaHealing = 2026,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MonsterSpellLargeAreaFire")] SoundEffectTypeMonsterSpellLargeAreaFire = 2028,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MonsterSpellLargeAreaEnergy")] SoundEffectTypeMonsterSpellLargeAreaEnergy = 2029,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MonsterSpellLargeAreaEarth")] SoundEffectTypeMonsterSpellLargeAreaEarth = 2030,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MonsterSpellLargeAreaIce")] SoundEffectTypeMonsterSpellLargeAreaIce = 2031,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MonsterSpellLargeAreaDeath")] SoundEffectTypeMonsterSpellLargeAreaDeath = 2032,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MonsterSpellLargeAreaHoly")] SoundEffectTypeMonsterSpellLargeAreaHoly = 2033,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MonsterSpellLargeAreaHit")] SoundEffectTypeMonsterSpellLargeAreaHit = 2034,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MonsterSpellLargeAreaLifeDrain")] SoundEffectTypeMonsterSpellLargeAreaLifeDrain = 2035,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MonsterSpellLargeAreaManaDrain")] SoundEffectTypeMonsterSpellLargeAreaManaDrain = 2036,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MonsterSpellLargeAreaDrowning")] SoundEffectTypeMonsterSpellLargeAreaDrowning = 2037,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MonsterSpellLargeAreaBleeding")] SoundEffectTypeMonsterSpellLargeAreaBleeding = 2038,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MonsterSpellLargeAreaHealing")] SoundEffectTypeMonsterSpellLargeAreaHealing = 2039,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MonsterSpellWaveFire")] SoundEffectTypeMonsterSpellWaveFire = 2041,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MonsterSpellWaveEnergy")] SoundEffectTypeMonsterSpellWaveEnergy = 2042,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MonsterSpellWaveEarth")] SoundEffectTypeMonsterSpellWaveEarth = 2043,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MonsterSpellWaveIce")] SoundEffectTypeMonsterSpellWaveIce = 2044,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MonsterSpellWaveDeath")] SoundEffectTypeMonsterSpellWaveDeath = 2045,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MonsterSpellWaveHoly")] SoundEffectTypeMonsterSpellWaveHoly = 2046,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MonsterSpellWaveHit")] SoundEffectTypeMonsterSpellWaveHit = 2047,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MonsterSpellWaveLifeDrain")] SoundEffectTypeMonsterSpellWaveLifeDrain = 2048,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MonsterSpellWaveManaDrain")] SoundEffectTypeMonsterSpellWaveManaDrain = 2049,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MonsterSpellWaveDrowning")] SoundEffectTypeMonsterSpellWaveDrowning = 2050,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MonsterSpellWaveBleeding")] SoundEffectTypeMonsterSpellWaveBleeding = 2051,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MonsterSpellWaveHealing")] SoundEffectTypeMonsterSpellWaveHealing = 2052,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MonsterSpellDeleteField")] SoundEffectTypeMonsterSpellDeleteField = 2054,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MonsterSpellChallenge")] SoundEffectTypeMonsterSpellChallenge = 2055,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MonsterSpellSpeed")] SoundEffectTypeMonsterSpellSpeed = 2056,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MonsterSpellDrunken")] SoundEffectTypeMonsterSpellDrunken = 2057,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MonsterSpellStrength")] SoundEffectTypeMonsterSpellStrength = 2058,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MonsterSpellOutfit")] SoundEffectTypeMonsterSpellOutfit = 2059,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MonsterSpellSummon")] SoundEffectTypeMonsterSpellSummon = 2060,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MonsterSpellMagicLevel")] SoundEffectTypeMonsterSpellMagicLevel = 2061,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MonsterSpellTeleport")] SoundEffectTypeMonsterSpellTeleport = 2062,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MonsterSpellHex")] SoundEffectTypeMonsterSpellHex = 2063,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MonsterSpellSuperDrunken")] SoundEffectTypeMonsterSpellSuperDrunken = 2064,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MonsterSpellRoot")] SoundEffectTypeMonsterSpellRoot = 2065,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MonsterSpellFear")] SoundEffectTypeMonsterSpellFear = 2066,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MonsterSpellHighRiskTeleport")] SoundEffectTypeMonsterSpellHighRiskTeleport = 2067,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MonsterSpellMinion")] SoundEffectTypeMonsterSpellMinion = 2068,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MonsterSpellAgony")] SoundEffectTypeMonsterSpellAgony = 2069,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_AmphibicBark")] SoundEffectTypeAmphibicBark = 2500,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_AquaticBeastBark")] SoundEffectTypeAquaticBeastBark = 2501,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_AquaticCritterBark")] SoundEffectTypeAquaticCritterBark = 2502,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_AquaticDeeplingBark")] SoundEffectTypeAquaticDeeplingBark = 2503,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_AquaticQuaraBark")] SoundEffectTypeAquaticQuaraBark = 2504,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_BirdBark")] SoundEffectTypeBirdBark = 2505,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_ConstructBark")] SoundEffectTypeConstructBark = 2506,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_DemonBark")] SoundEffectTypeDemonBark = 2507,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_DragonBark")] SoundEffectTypeDragonBark = 2508,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_ElementalEarthBark")] SoundEffectTypeElementalEarthBark = 2509,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_ElementalEnergyBark")] SoundEffectTypeElementalEnergyBark = 2510,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_ElementalFireBark")] SoundEffectTypeElementalFireBark = 2511,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_ElementalWaterBark")] SoundEffectTypeElementalWaterBark = 2512,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_ExtraDimensionalBeastBark")] SoundEffectTypeExtraDimensionalBeastBark = 2513,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_ExtraDimensionalEnergyBark")] SoundEffectTypeExtraDimensionalEnergyBark = 2514,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_ExtraDimensionalHorrorBark")] SoundEffectTypeExtraDimensionalHorrorBark = 2515,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_FeyBark")] SoundEffectTypeFeyBark = 2516,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_GiantBark")] SoundEffectTypeGiantBark = 2517,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_HumanFemaleBark")] SoundEffectTypeHumanFemaleBark = 2518,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_HumanMaleBark")] SoundEffectTypeHumanMaleBark = 2519,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_HumanoidGoblinBark")] SoundEffectTypeHumanoidGoblinBark = 2520,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_HumanoidOrcBark")] SoundEffectTypeHumanoidOrcBark = 2521,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_LycanthropeBark")] SoundEffectTypeLycanthropeBark = 2522,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MagicalEnergyBark")] SoundEffectTypeMagicalEnergyBark = 2523,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MagicalHorrorBark")] SoundEffectTypeMagicalHorrorBark = 2524,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MammalBearBark")] SoundEffectTypeMammalBearBark = 2525,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MammalCritterBark")] SoundEffectTypeMammalCritterBark = 2526,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MammalDogBark")] SoundEffectTypeMammalDogBark = 2527,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MammalElephantBark")] SoundEffectTypeMammalElephantBark = 2528,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MammalFeralBark")] SoundEffectTypeMammalFeralBark = 2529,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MammalHorseBark")] SoundEffectTypeMammalHorseBark = 2530,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MammalMammothBark")] SoundEffectTypeMammalMammothBark = 2531,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MonsterBark")] SoundEffectTypeMonsterBark = 2532,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_PhantomBark")] SoundEffectTypePhantomBark = 2533,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_PlantBark")] SoundEffectTypePlantBark = 2534,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_ReptileLargeBark")] SoundEffectTypeReptileLargeBark = 2535,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_ReptileSmallBark")] SoundEffectTypeReptileSmallBark = 2536,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SlimeBark")] SoundEffectTypeSlimeBark = 2537,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_UndeadBark")] SoundEffectTypeUndeadBark = 2538,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_VerminCritterBark")] SoundEffectTypeVerminCritterBark = 2539,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_VerminInsectBark")] SoundEffectTypeVerminInsectBark = 2540,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_VerminRotwormBark")] SoundEffectTypeVerminRotwormBark = 2541,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_HumanSageBark")] SoundEffectTypeHumanSageBark = 2542,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_HumanCroneBark")] SoundEffectTypeHumanCroneBark = 2543,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_ApeBark")] SoundEffectTypeApeBark = 2544,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_AmphibicDeath")] SoundEffectTypeAmphibicDeath = 2600,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_AquaticBeastDeath")] SoundEffectTypeAquaticBeastDeath = 2601,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_AquaticCritterDeath")] SoundEffectTypeAquaticCritterDeath = 2602,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_AquaticDeeplingDeath")] SoundEffectTypeAquaticDeeplingDeath = 2603,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_AquaticQuaraDeath")] SoundEffectTypeAquaticQuaraDeath = 2604,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_BirdDeath")] SoundEffectTypeBirdDeath = 2605,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_ConstructDeath")] SoundEffectTypeConstructDeath = 2606,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_DemonDeath")] SoundEffectTypeDemonDeath = 2607,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_DragonDeath")] SoundEffectTypeDragonDeath = 2608,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_ElementalEarthDeath")] SoundEffectTypeElementalEarthDeath = 2609,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_ElementalEnergyDeath")] SoundEffectTypeElementalEnergyDeath = 2610,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_ElementalFireDeath")] SoundEffectTypeElementalFireDeath = 2611,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_ElementalWaterDeath")] SoundEffectTypeElementalWaterDeath = 2612,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_ExtraDimensionalBeastDeath")] SoundEffectTypeExtraDimensionalBeastDeath = 2613,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_ExtraDimensionalEnergyDeath")] SoundEffectTypeExtraDimensionalEnergyDeath = 2614,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_ExtraDimensionalHorrorDeath")] SoundEffectTypeExtraDimensionalHorrorDeath = 2615,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_FeyDeath")] SoundEffectTypeFeyDeath = 2616,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_GiantDeath")] SoundEffectTypeGiantDeath = 2617,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_HumanFemaleDeath")] SoundEffectTypeHumanFemaleDeath = 2618,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_HumanMaleDeath")] SoundEffectTypeHumanMaleDeath = 2619,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_HumanoidGoblinDeath")] SoundEffectTypeHumanoidGoblinDeath = 2620,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_HumanoidOrcDeath")] SoundEffectTypeHumanoidOrcDeath = 2621,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_LycanthropeDeath")] SoundEffectTypeLycanthropeDeath = 2622,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MagicalEnergyDeath")] SoundEffectTypeMagicalEnergyDeath = 2623,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MagicalHorrorDeath")] SoundEffectTypeMagicalHorrorDeath = 2624,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MammalBearDeath")] SoundEffectTypeMammalBearDeath = 2625,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MammalCritterDeath")] SoundEffectTypeMammalCritterDeath = 2626,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MammalDogDeath")] SoundEffectTypeMammalDogDeath = 2627,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MammalElephantDeath")] SoundEffectTypeMammalElephantDeath = 2628,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MammalFeralDeath")] SoundEffectTypeMammalFeralDeath = 2629,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MammalHorseDeath")] SoundEffectTypeMammalHorseDeath = 2630,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MammalMammothDeath")] SoundEffectTypeMammalMammothDeath = 2631,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_MonsterDeath")] SoundEffectTypeMonsterDeath = 2632,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_PhantomDeath")] SoundEffectTypePhantomDeath = 2633,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_PlantDeath")] SoundEffectTypePlantDeath = 2634,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_ReptileLargeDeath")] SoundEffectTypeReptileLargeDeath = 2635,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_ReptileSmallDeath")] SoundEffectTypeReptileSmallDeath = 2636,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_SlimeDeath")] SoundEffectTypeSlimeDeath = 2637,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_UndeadDeath")] SoundEffectTypeUndeadDeath = 2638,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_VerminCritterDeath")] SoundEffectTypeVerminCritterDeath = 2639,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_VerminInsectDeath")] SoundEffectTypeVerminInsectDeath = 2640,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_VerminRotwormDeath")] SoundEffectTypeVerminRotwormDeath = 2641,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_HumanSageDeath")] SoundEffectTypeHumanSageDeath = 2642,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_HumanCroneDeath")] SoundEffectTypeHumanCroneDeath = 2643,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_ApeDeath")] SoundEffectTypeApeDeath = 2644,
    [pbr::OriginalName("SOUND_EFFECT_TYPE_GodspellKillAllMonsters")] SoundEffectTypeGodspellKillAllMonsters = 10001,
  }

  #endregion

  #region Messages
  public sealed partial class Sounds : pb::IMessage<Sounds>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Sounds> _parser = new pb::MessageParser<Sounds>(() => new Sounds());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Sounds> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Soundbank.SoundBankReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Sounds() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Sounds(Sounds other) : this() {
      sound_ = other.sound_.Clone();
      numericSoundEffect_ = other.numericSoundEffect_.Clone();
      ambienceStream_ = other.ambienceStream_.Clone();
      ambienceObjectStream_ = other.ambienceObjectStream_.Clone();
      musicTemplate_ = other.musicTemplate_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Sounds Clone() {
      return new Sounds(this);
    }

    /// <summary>Field number for the "sound" field.</summary>
    public const int SoundFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Soundbank.Sound> _repeated_sound_codec
        = pb::FieldCodec.ForMessage(10, global::Soundbank.Sound.Parser);
    private readonly pbc::RepeatedField<global::Soundbank.Sound> sound_ = new pbc::RepeatedField<global::Soundbank.Sound>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Soundbank.Sound> Sound {
      get { return sound_; }
    }

    /// <summary>Field number for the "numeric_sound_effect" field.</summary>
    public const int NumericSoundEffectFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Soundbank.NumericSoundEffect> _repeated_numericSoundEffect_codec
        = pb::FieldCodec.ForMessage(18, global::Soundbank.NumericSoundEffect.Parser);
    private readonly pbc::RepeatedField<global::Soundbank.NumericSoundEffect> numericSoundEffect_ = new pbc::RepeatedField<global::Soundbank.NumericSoundEffect>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Soundbank.NumericSoundEffect> NumericSoundEffect {
      get { return numericSoundEffect_; }
    }

    /// <summary>Field number for the "ambience_stream" field.</summary>
    public const int AmbienceStreamFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Soundbank.AmbienceStream> _repeated_ambienceStream_codec
        = pb::FieldCodec.ForMessage(26, global::Soundbank.AmbienceStream.Parser);
    private readonly pbc::RepeatedField<global::Soundbank.AmbienceStream> ambienceStream_ = new pbc::RepeatedField<global::Soundbank.AmbienceStream>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Soundbank.AmbienceStream> AmbienceStream {
      get { return ambienceStream_; }
    }

    /// <summary>Field number for the "ambience_object_stream" field.</summary>
    public const int AmbienceObjectStreamFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Soundbank.AmbienceObjectStream> _repeated_ambienceObjectStream_codec
        = pb::FieldCodec.ForMessage(34, global::Soundbank.AmbienceObjectStream.Parser);
    private readonly pbc::RepeatedField<global::Soundbank.AmbienceObjectStream> ambienceObjectStream_ = new pbc::RepeatedField<global::Soundbank.AmbienceObjectStream>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Soundbank.AmbienceObjectStream> AmbienceObjectStream {
      get { return ambienceObjectStream_; }
    }

    /// <summary>Field number for the "music_template" field.</summary>
    public const int MusicTemplateFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Soundbank.MusicTemplate> _repeated_musicTemplate_codec
        = pb::FieldCodec.ForMessage(42, global::Soundbank.MusicTemplate.Parser);
    private readonly pbc::RepeatedField<global::Soundbank.MusicTemplate> musicTemplate_ = new pbc::RepeatedField<global::Soundbank.MusicTemplate>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Soundbank.MusicTemplate> MusicTemplate {
      get { return musicTemplate_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Sounds);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Sounds other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!sound_.Equals(other.sound_)) return false;
      if(!numericSoundEffect_.Equals(other.numericSoundEffect_)) return false;
      if(!ambienceStream_.Equals(other.ambienceStream_)) return false;
      if(!ambienceObjectStream_.Equals(other.ambienceObjectStream_)) return false;
      if(!musicTemplate_.Equals(other.musicTemplate_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= sound_.GetHashCode();
      hash ^= numericSoundEffect_.GetHashCode();
      hash ^= ambienceStream_.GetHashCode();
      hash ^= ambienceObjectStream_.GetHashCode();
      hash ^= musicTemplate_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      sound_.WriteTo(output, _repeated_sound_codec);
      numericSoundEffect_.WriteTo(output, _repeated_numericSoundEffect_codec);
      ambienceStream_.WriteTo(output, _repeated_ambienceStream_codec);
      ambienceObjectStream_.WriteTo(output, _repeated_ambienceObjectStream_codec);
      musicTemplate_.WriteTo(output, _repeated_musicTemplate_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      sound_.WriteTo(ref output, _repeated_sound_codec);
      numericSoundEffect_.WriteTo(ref output, _repeated_numericSoundEffect_codec);
      ambienceStream_.WriteTo(ref output, _repeated_ambienceStream_codec);
      ambienceObjectStream_.WriteTo(ref output, _repeated_ambienceObjectStream_codec);
      musicTemplate_.WriteTo(ref output, _repeated_musicTemplate_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += sound_.CalculateSize(_repeated_sound_codec);
      size += numericSoundEffect_.CalculateSize(_repeated_numericSoundEffect_codec);
      size += ambienceStream_.CalculateSize(_repeated_ambienceStream_codec);
      size += ambienceObjectStream_.CalculateSize(_repeated_ambienceObjectStream_codec);
      size += musicTemplate_.CalculateSize(_repeated_musicTemplate_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Sounds other) {
      if (other == null) {
        return;
      }
      sound_.Add(other.sound_);
      numericSoundEffect_.Add(other.numericSoundEffect_);
      ambienceStream_.Add(other.ambienceStream_);
      ambienceObjectStream_.Add(other.ambienceObjectStream_);
      musicTemplate_.Add(other.musicTemplate_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            sound_.AddEntriesFrom(input, _repeated_sound_codec);
            break;
          }
          case 18: {
            numericSoundEffect_.AddEntriesFrom(input, _repeated_numericSoundEffect_codec);
            break;
          }
          case 26: {
            ambienceStream_.AddEntriesFrom(input, _repeated_ambienceStream_codec);
            break;
          }
          case 34: {
            ambienceObjectStream_.AddEntriesFrom(input, _repeated_ambienceObjectStream_codec);
            break;
          }
          case 42: {
            musicTemplate_.AddEntriesFrom(input, _repeated_musicTemplate_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            sound_.AddEntriesFrom(ref input, _repeated_sound_codec);
            break;
          }
          case 18: {
            numericSoundEffect_.AddEntriesFrom(ref input, _repeated_numericSoundEffect_codec);
            break;
          }
          case 26: {
            ambienceStream_.AddEntriesFrom(ref input, _repeated_ambienceStream_codec);
            break;
          }
          case 34: {
            ambienceObjectStream_.AddEntriesFrom(ref input, _repeated_ambienceObjectStream_codec);
            break;
          }
          case 42: {
            musicTemplate_.AddEntriesFrom(ref input, _repeated_musicTemplate_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Sound : pb::IMessage<Sound>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Sound> _parser = new pb::MessageParser<Sound>(() => new Sound());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Sound> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Soundbank.SoundBankReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Sound() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Sound(Sound other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      filename_ = other.filename_;
      originalFilename_ = other.originalFilename_;
      isStream_ = other.isStream_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Sound Clone() {
      return new Sound(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static uint IdDefaultValue = 0;

    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "filename" field.</summary>
    public const int FilenameFieldNumber = 2;
    private readonly static string FilenameDefaultValue = "";

    private string filename_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Filename {
      get { return filename_ ?? FilenameDefaultValue; }
      set {
        filename_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "filename" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFilename {
      get { return filename_ != null; }
    }
    /// <summary>Clears the value of the "filename" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFilename() {
      filename_ = null;
    }

    /// <summary>Field number for the "original_filename" field.</summary>
    public const int OriginalFilenameFieldNumber = 3;
    private readonly static string OriginalFilenameDefaultValue = "";

    private string originalFilename_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OriginalFilename {
      get { return originalFilename_ ?? OriginalFilenameDefaultValue; }
      set {
        originalFilename_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "original_filename" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOriginalFilename {
      get { return originalFilename_ != null; }
    }
    /// <summary>Clears the value of the "original_filename" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOriginalFilename() {
      originalFilename_ = null;
    }

    /// <summary>Field number for the "is_stream" field.</summary>
    public const int IsStreamFieldNumber = 4;
    private readonly static bool IsStreamDefaultValue = false;

    private bool isStream_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsStream {
      get { if ((_hasBits0 & 2) != 0) { return isStream_; } else { return IsStreamDefaultValue; } }
      set {
        _hasBits0 |= 2;
        isStream_ = value;
      }
    }
    /// <summary>Gets whether the "is_stream" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsStream {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "is_stream" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsStream() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Sound);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Sound other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Filename != other.Filename) return false;
      if (OriginalFilename != other.OriginalFilename) return false;
      if (IsStream != other.IsStream) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasFilename) hash ^= Filename.GetHashCode();
      if (HasOriginalFilename) hash ^= OriginalFilename.GetHashCode();
      if (HasIsStream) hash ^= IsStream.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (HasFilename) {
        output.WriteRawTag(18);
        output.WriteString(Filename);
      }
      if (HasOriginalFilename) {
        output.WriteRawTag(26);
        output.WriteString(OriginalFilename);
      }
      if (HasIsStream) {
        output.WriteRawTag(32);
        output.WriteBool(IsStream);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (HasFilename) {
        output.WriteRawTag(18);
        output.WriteString(Filename);
      }
      if (HasOriginalFilename) {
        output.WriteRawTag(26);
        output.WriteString(OriginalFilename);
      }
      if (HasIsStream) {
        output.WriteRawTag(32);
        output.WriteBool(IsStream);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (HasFilename) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filename);
      }
      if (HasOriginalFilename) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OriginalFilename);
      }
      if (HasIsStream) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Sound other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasFilename) {
        Filename = other.Filename;
      }
      if (other.HasOriginalFilename) {
        OriginalFilename = other.OriginalFilename;
      }
      if (other.HasIsStream) {
        IsStream = other.IsStream;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 18: {
            Filename = input.ReadString();
            break;
          }
          case 26: {
            OriginalFilename = input.ReadString();
            break;
          }
          case 32: {
            IsStream = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 18: {
            Filename = input.ReadString();
            break;
          }
          case 26: {
            OriginalFilename = input.ReadString();
            break;
          }
          case 32: {
            IsStream = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class NumericSoundEffect : pb::IMessage<NumericSoundEffect>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NumericSoundEffect> _parser = new pb::MessageParser<NumericSoundEffect>(() => new NumericSoundEffect());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<NumericSoundEffect> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Soundbank.SoundBankReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NumericSoundEffect() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NumericSoundEffect(NumericSoundEffect other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      numericSoundType_ = other.numericSoundType_;
      randomPitch_ = other.randomPitch_ != null ? other.randomPitch_.Clone() : null;
      randomVolume_ = other.randomVolume_ != null ? other.randomVolume_.Clone() : null;
      simpleSoundEffect_ = other.simpleSoundEffect_ != null ? other.simpleSoundEffect_.Clone() : null;
      randomSoundEffect_ = other.randomSoundEffect_ != null ? other.randomSoundEffect_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NumericSoundEffect Clone() {
      return new NumericSoundEffect(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static uint IdDefaultValue = 0;

    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "numeric_sound_type" field.</summary>
    public const int NumericSoundTypeFieldNumber = 2;
    private readonly static global::Soundbank.ENumericSoundType NumericSoundTypeDefaultValue = global::Soundbank.ENumericSoundType.NumericSoundTypeUnknown;

    private global::Soundbank.ENumericSoundType numericSoundType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Soundbank.ENumericSoundType NumericSoundType {
      get { if ((_hasBits0 & 2) != 0) { return numericSoundType_; } else { return NumericSoundTypeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        numericSoundType_ = value;
      }
    }
    /// <summary>Gets whether the "numeric_sound_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNumericSoundType {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "numeric_sound_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNumericSoundType() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "random_pitch" field.</summary>
    public const int RandomPitchFieldNumber = 3;
    private global::Soundbank.MinMaxFloat randomPitch_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Soundbank.MinMaxFloat RandomPitch {
      get { return randomPitch_; }
      set {
        randomPitch_ = value;
      }
    }

    /// <summary>Field number for the "random_volume" field.</summary>
    public const int RandomVolumeFieldNumber = 4;
    private global::Soundbank.MinMaxFloat randomVolume_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Soundbank.MinMaxFloat RandomVolume {
      get { return randomVolume_; }
      set {
        randomVolume_ = value;
      }
    }

    /// <summary>Field number for the "simple_sound_effect" field.</summary>
    public const int SimpleSoundEffectFieldNumber = 5;
    private global::Soundbank.SimpleSoundEffect simpleSoundEffect_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Soundbank.SimpleSoundEffect SimpleSoundEffect {
      get { return simpleSoundEffect_; }
      set {
        simpleSoundEffect_ = value;
      }
    }

    /// <summary>Field number for the "random_sound_effect" field.</summary>
    public const int RandomSoundEffectFieldNumber = 6;
    private global::Soundbank.RandomSoundEffect randomSoundEffect_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Soundbank.RandomSoundEffect RandomSoundEffect {
      get { return randomSoundEffect_; }
      set {
        randomSoundEffect_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as NumericSoundEffect);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(NumericSoundEffect other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (NumericSoundType != other.NumericSoundType) return false;
      if (!object.Equals(RandomPitch, other.RandomPitch)) return false;
      if (!object.Equals(RandomVolume, other.RandomVolume)) return false;
      if (!object.Equals(SimpleSoundEffect, other.SimpleSoundEffect)) return false;
      if (!object.Equals(RandomSoundEffect, other.RandomSoundEffect)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasNumericSoundType) hash ^= NumericSoundType.GetHashCode();
      if (randomPitch_ != null) hash ^= RandomPitch.GetHashCode();
      if (randomVolume_ != null) hash ^= RandomVolume.GetHashCode();
      if (simpleSoundEffect_ != null) hash ^= SimpleSoundEffect.GetHashCode();
      if (randomSoundEffect_ != null) hash ^= RandomSoundEffect.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (HasNumericSoundType) {
        output.WriteRawTag(16);
        output.WriteEnum((int) NumericSoundType);
      }
      if (randomPitch_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(RandomPitch);
      }
      if (randomVolume_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(RandomVolume);
      }
      if (simpleSoundEffect_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(SimpleSoundEffect);
      }
      if (randomSoundEffect_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(RandomSoundEffect);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (HasNumericSoundType) {
        output.WriteRawTag(16);
        output.WriteEnum((int) NumericSoundType);
      }
      if (randomPitch_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(RandomPitch);
      }
      if (randomVolume_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(RandomVolume);
      }
      if (simpleSoundEffect_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(SimpleSoundEffect);
      }
      if (randomSoundEffect_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(RandomSoundEffect);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (HasNumericSoundType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) NumericSoundType);
      }
      if (randomPitch_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RandomPitch);
      }
      if (randomVolume_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RandomVolume);
      }
      if (simpleSoundEffect_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SimpleSoundEffect);
      }
      if (randomSoundEffect_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RandomSoundEffect);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(NumericSoundEffect other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasNumericSoundType) {
        NumericSoundType = other.NumericSoundType;
      }
      if (other.randomPitch_ != null) {
        if (randomPitch_ == null) {
          RandomPitch = new global::Soundbank.MinMaxFloat();
        }
        RandomPitch.MergeFrom(other.RandomPitch);
      }
      if (other.randomVolume_ != null) {
        if (randomVolume_ == null) {
          RandomVolume = new global::Soundbank.MinMaxFloat();
        }
        RandomVolume.MergeFrom(other.RandomVolume);
      }
      if (other.simpleSoundEffect_ != null) {
        if (simpleSoundEffect_ == null) {
          SimpleSoundEffect = new global::Soundbank.SimpleSoundEffect();
        }
        SimpleSoundEffect.MergeFrom(other.SimpleSoundEffect);
      }
      if (other.randomSoundEffect_ != null) {
        if (randomSoundEffect_ == null) {
          RandomSoundEffect = new global::Soundbank.RandomSoundEffect();
        }
        RandomSoundEffect.MergeFrom(other.RandomSoundEffect);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            NumericSoundType = (global::Soundbank.ENumericSoundType) input.ReadEnum();
            break;
          }
          case 26: {
            if (randomPitch_ == null) {
              RandomPitch = new global::Soundbank.MinMaxFloat();
            }
            input.ReadMessage(RandomPitch);
            break;
          }
          case 34: {
            if (randomVolume_ == null) {
              RandomVolume = new global::Soundbank.MinMaxFloat();
            }
            input.ReadMessage(RandomVolume);
            break;
          }
          case 42: {
            if (simpleSoundEffect_ == null) {
              SimpleSoundEffect = new global::Soundbank.SimpleSoundEffect();
            }
            input.ReadMessage(SimpleSoundEffect);
            break;
          }
          case 50: {
            if (randomSoundEffect_ == null) {
              RandomSoundEffect = new global::Soundbank.RandomSoundEffect();
            }
            input.ReadMessage(RandomSoundEffect);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            NumericSoundType = (global::Soundbank.ENumericSoundType) input.ReadEnum();
            break;
          }
          case 26: {
            if (randomPitch_ == null) {
              RandomPitch = new global::Soundbank.MinMaxFloat();
            }
            input.ReadMessage(RandomPitch);
            break;
          }
          case 34: {
            if (randomVolume_ == null) {
              RandomVolume = new global::Soundbank.MinMaxFloat();
            }
            input.ReadMessage(RandomVolume);
            break;
          }
          case 42: {
            if (simpleSoundEffect_ == null) {
              SimpleSoundEffect = new global::Soundbank.SimpleSoundEffect();
            }
            input.ReadMessage(SimpleSoundEffect);
            break;
          }
          case 50: {
            if (randomSoundEffect_ == null) {
              RandomSoundEffect = new global::Soundbank.RandomSoundEffect();
            }
            input.ReadMessage(RandomSoundEffect);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AmbienceStream : pb::IMessage<AmbienceStream>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AmbienceStream> _parser = new pb::MessageParser<AmbienceStream>(() => new AmbienceStream());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AmbienceStream> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Soundbank.SoundBankReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AmbienceStream() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AmbienceStream(AmbienceStream other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      loopingSoundId_ = other.loopingSoundId_;
      delayedEffects_ = other.delayedEffects_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AmbienceStream Clone() {
      return new AmbienceStream(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static uint IdDefaultValue = 0;

    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "looping_sound_id" field.</summary>
    public const int LoopingSoundIdFieldNumber = 2;
    private readonly static uint LoopingSoundIdDefaultValue = 0;

    private uint loopingSoundId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint LoopingSoundId {
      get { if ((_hasBits0 & 2) != 0) { return loopingSoundId_; } else { return LoopingSoundIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        loopingSoundId_ = value;
      }
    }
    /// <summary>Gets whether the "looping_sound_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLoopingSoundId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "looping_sound_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLoopingSoundId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "delayed_effects" field.</summary>
    public const int DelayedEffectsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Soundbank.DelayedSoundEffect> _repeated_delayedEffects_codec
        = pb::FieldCodec.ForMessage(26, global::Soundbank.DelayedSoundEffect.Parser);
    private readonly pbc::RepeatedField<global::Soundbank.DelayedSoundEffect> delayedEffects_ = new pbc::RepeatedField<global::Soundbank.DelayedSoundEffect>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Soundbank.DelayedSoundEffect> DelayedEffects {
      get { return delayedEffects_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AmbienceStream);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AmbienceStream other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (LoopingSoundId != other.LoopingSoundId) return false;
      if(!delayedEffects_.Equals(other.delayedEffects_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasLoopingSoundId) hash ^= LoopingSoundId.GetHashCode();
      hash ^= delayedEffects_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (HasLoopingSoundId) {
        output.WriteRawTag(16);
        output.WriteUInt32(LoopingSoundId);
      }
      delayedEffects_.WriteTo(output, _repeated_delayedEffects_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (HasLoopingSoundId) {
        output.WriteRawTag(16);
        output.WriteUInt32(LoopingSoundId);
      }
      delayedEffects_.WriteTo(ref output, _repeated_delayedEffects_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (HasLoopingSoundId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LoopingSoundId);
      }
      size += delayedEffects_.CalculateSize(_repeated_delayedEffects_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AmbienceStream other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasLoopingSoundId) {
        LoopingSoundId = other.LoopingSoundId;
      }
      delayedEffects_.Add(other.delayedEffects_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            LoopingSoundId = input.ReadUInt32();
            break;
          }
          case 26: {
            delayedEffects_.AddEntriesFrom(input, _repeated_delayedEffects_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            LoopingSoundId = input.ReadUInt32();
            break;
          }
          case 26: {
            delayedEffects_.AddEntriesFrom(ref input, _repeated_delayedEffects_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AmbienceObjectStream : pb::IMessage<AmbienceObjectStream>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AmbienceObjectStream> _parser = new pb::MessageParser<AmbienceObjectStream>(() => new AmbienceObjectStream());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AmbienceObjectStream> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Soundbank.SoundBankReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AmbienceObjectStream() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AmbienceObjectStream(AmbienceObjectStream other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      countedAppearanceTypes_ = other.countedAppearanceTypes_.Clone();
      soundEffects_ = other.soundEffects_.Clone();
      maxSoundDistance_ = other.maxSoundDistance_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AmbienceObjectStream Clone() {
      return new AmbienceObjectStream(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static uint IdDefaultValue = 0;

    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "counted_appearance_types" field.</summary>
    public const int CountedAppearanceTypesFieldNumber = 2;
    private static readonly pb::FieldCodec<uint> _repeated_countedAppearanceTypes_codec
        = pb::FieldCodec.ForUInt32(16);
    private readonly pbc::RepeatedField<uint> countedAppearanceTypes_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> CountedAppearanceTypes {
      get { return countedAppearanceTypes_; }
    }

    /// <summary>Field number for the "sound_effects" field.</summary>
    public const int SoundEffectsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Soundbank.AppearanceTypesCountSoundEffect> _repeated_soundEffects_codec
        = pb::FieldCodec.ForMessage(26, global::Soundbank.AppearanceTypesCountSoundEffect.Parser);
    private readonly pbc::RepeatedField<global::Soundbank.AppearanceTypesCountSoundEffect> soundEffects_ = new pbc::RepeatedField<global::Soundbank.AppearanceTypesCountSoundEffect>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Soundbank.AppearanceTypesCountSoundEffect> SoundEffects {
      get { return soundEffects_; }
    }

    /// <summary>Field number for the "max_sound_distance" field.</summary>
    public const int MaxSoundDistanceFieldNumber = 4;
    private readonly static uint MaxSoundDistanceDefaultValue = 0;

    private uint maxSoundDistance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MaxSoundDistance {
      get { if ((_hasBits0 & 2) != 0) { return maxSoundDistance_; } else { return MaxSoundDistanceDefaultValue; } }
      set {
        _hasBits0 |= 2;
        maxSoundDistance_ = value;
      }
    }
    /// <summary>Gets whether the "max_sound_distance" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMaxSoundDistance {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "max_sound_distance" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMaxSoundDistance() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AmbienceObjectStream);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AmbienceObjectStream other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!countedAppearanceTypes_.Equals(other.countedAppearanceTypes_)) return false;
      if(!soundEffects_.Equals(other.soundEffects_)) return false;
      if (MaxSoundDistance != other.MaxSoundDistance) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      hash ^= countedAppearanceTypes_.GetHashCode();
      hash ^= soundEffects_.GetHashCode();
      if (HasMaxSoundDistance) hash ^= MaxSoundDistance.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      countedAppearanceTypes_.WriteTo(output, _repeated_countedAppearanceTypes_codec);
      soundEffects_.WriteTo(output, _repeated_soundEffects_codec);
      if (HasMaxSoundDistance) {
        output.WriteRawTag(32);
        output.WriteUInt32(MaxSoundDistance);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      countedAppearanceTypes_.WriteTo(ref output, _repeated_countedAppearanceTypes_codec);
      soundEffects_.WriteTo(ref output, _repeated_soundEffects_codec);
      if (HasMaxSoundDistance) {
        output.WriteRawTag(32);
        output.WriteUInt32(MaxSoundDistance);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      size += countedAppearanceTypes_.CalculateSize(_repeated_countedAppearanceTypes_codec);
      size += soundEffects_.CalculateSize(_repeated_soundEffects_codec);
      if (HasMaxSoundDistance) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxSoundDistance);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AmbienceObjectStream other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      countedAppearanceTypes_.Add(other.countedAppearanceTypes_);
      soundEffects_.Add(other.soundEffects_);
      if (other.HasMaxSoundDistance) {
        MaxSoundDistance = other.MaxSoundDistance;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 18:
          case 16: {
            countedAppearanceTypes_.AddEntriesFrom(input, _repeated_countedAppearanceTypes_codec);
            break;
          }
          case 26: {
            soundEffects_.AddEntriesFrom(input, _repeated_soundEffects_codec);
            break;
          }
          case 32: {
            MaxSoundDistance = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 18:
          case 16: {
            countedAppearanceTypes_.AddEntriesFrom(ref input, _repeated_countedAppearanceTypes_codec);
            break;
          }
          case 26: {
            soundEffects_.AddEntriesFrom(ref input, _repeated_soundEffects_codec);
            break;
          }
          case 32: {
            MaxSoundDistance = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MusicTemplate : pb::IMessage<MusicTemplate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MusicTemplate> _parser = new pb::MessageParser<MusicTemplate>(() => new MusicTemplate());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MusicTemplate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Soundbank.SoundBankReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MusicTemplate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MusicTemplate(MusicTemplate other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      soundId_ = other.soundId_;
      musicType_ = other.musicType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MusicTemplate Clone() {
      return new MusicTemplate(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static uint IdDefaultValue = 0;

    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "sound_id" field.</summary>
    public const int SoundIdFieldNumber = 2;
    private readonly static uint SoundIdDefaultValue = 0;

    private uint soundId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SoundId {
      get { if ((_hasBits0 & 2) != 0) { return soundId_; } else { return SoundIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        soundId_ = value;
      }
    }
    /// <summary>Gets whether the "sound_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSoundId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "sound_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSoundId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "music_type" field.</summary>
    public const int MusicTypeFieldNumber = 3;
    private readonly static global::Soundbank.EMusicType MusicTypeDefaultValue = global::Soundbank.EMusicType.MusicTypeUnknown;

    private global::Soundbank.EMusicType musicType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Soundbank.EMusicType MusicType {
      get { if ((_hasBits0 & 4) != 0) { return musicType_; } else { return MusicTypeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        musicType_ = value;
      }
    }
    /// <summary>Gets whether the "music_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMusicType {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "music_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMusicType() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MusicTemplate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MusicTemplate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (SoundId != other.SoundId) return false;
      if (MusicType != other.MusicType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasSoundId) hash ^= SoundId.GetHashCode();
      if (HasMusicType) hash ^= MusicType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (HasSoundId) {
        output.WriteRawTag(16);
        output.WriteUInt32(SoundId);
      }
      if (HasMusicType) {
        output.WriteRawTag(24);
        output.WriteEnum((int) MusicType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (HasSoundId) {
        output.WriteRawTag(16);
        output.WriteUInt32(SoundId);
      }
      if (HasMusicType) {
        output.WriteRawTag(24);
        output.WriteEnum((int) MusicType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (HasSoundId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SoundId);
      }
      if (HasMusicType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MusicType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MusicTemplate other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasSoundId) {
        SoundId = other.SoundId;
      }
      if (other.HasMusicType) {
        MusicType = other.MusicType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            SoundId = input.ReadUInt32();
            break;
          }
          case 24: {
            MusicType = (global::Soundbank.EMusicType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            SoundId = input.ReadUInt32();
            break;
          }
          case 24: {
            MusicType = (global::Soundbank.EMusicType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SimpleSoundEffect : pb::IMessage<SimpleSoundEffect>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SimpleSoundEffect> _parser = new pb::MessageParser<SimpleSoundEffect>(() => new SimpleSoundEffect());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SimpleSoundEffect> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Soundbank.SoundBankReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SimpleSoundEffect() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SimpleSoundEffect(SimpleSoundEffect other) : this() {
      _hasBits0 = other._hasBits0;
      soundId_ = other.soundId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SimpleSoundEffect Clone() {
      return new SimpleSoundEffect(this);
    }

    /// <summary>Field number for the "sound_id" field.</summary>
    public const int SoundIdFieldNumber = 1;
    private readonly static uint SoundIdDefaultValue = 0;

    private uint soundId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SoundId {
      get { if ((_hasBits0 & 1) != 0) { return soundId_; } else { return SoundIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        soundId_ = value;
      }
    }
    /// <summary>Gets whether the "sound_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSoundId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "sound_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSoundId() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SimpleSoundEffect);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SimpleSoundEffect other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SoundId != other.SoundId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSoundId) hash ^= SoundId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSoundId) {
        output.WriteRawTag(8);
        output.WriteUInt32(SoundId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSoundId) {
        output.WriteRawTag(8);
        output.WriteUInt32(SoundId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSoundId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SoundId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SimpleSoundEffect other) {
      if (other == null) {
        return;
      }
      if (other.HasSoundId) {
        SoundId = other.SoundId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SoundId = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SoundId = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RandomSoundEffect : pb::IMessage<RandomSoundEffect>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RandomSoundEffect> _parser = new pb::MessageParser<RandomSoundEffect>(() => new RandomSoundEffect());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RandomSoundEffect> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Soundbank.SoundBankReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RandomSoundEffect() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RandomSoundEffect(RandomSoundEffect other) : this() {
      randomSoundId_ = other.randomSoundId_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RandomSoundEffect Clone() {
      return new RandomSoundEffect(this);
    }

    /// <summary>Field number for the "random_sound_id" field.</summary>
    public const int RandomSoundIdFieldNumber = 1;
    private static readonly pb::FieldCodec<uint> _repeated_randomSoundId_codec
        = pb::FieldCodec.ForUInt32(8);
    private readonly pbc::RepeatedField<uint> randomSoundId_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> RandomSoundId {
      get { return randomSoundId_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RandomSoundEffect);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RandomSoundEffect other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!randomSoundId_.Equals(other.randomSoundId_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= randomSoundId_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      randomSoundId_.WriteTo(output, _repeated_randomSoundId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      randomSoundId_.WriteTo(ref output, _repeated_randomSoundId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += randomSoundId_.CalculateSize(_repeated_randomSoundId_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RandomSoundEffect other) {
      if (other == null) {
        return;
      }
      randomSoundId_.Add(other.randomSoundId_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            randomSoundId_.AddEntriesFrom(input, _repeated_randomSoundId_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            randomSoundId_.AddEntriesFrom(ref input, _repeated_randomSoundId_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DelayedSoundEffect : pb::IMessage<DelayedSoundEffect>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DelayedSoundEffect> _parser = new pb::MessageParser<DelayedSoundEffect>(() => new DelayedSoundEffect());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DelayedSoundEffect> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Soundbank.SoundBankReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DelayedSoundEffect() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DelayedSoundEffect(DelayedSoundEffect other) : this() {
      _hasBits0 = other._hasBits0;
      numericSoundEffectId_ = other.numericSoundEffectId_;
      delaySeconds_ = other.delaySeconds_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DelayedSoundEffect Clone() {
      return new DelayedSoundEffect(this);
    }

    /// <summary>Field number for the "numeric_sound_effect_id" field.</summary>
    public const int NumericSoundEffectIdFieldNumber = 1;
    private readonly static uint NumericSoundEffectIdDefaultValue = 0;

    private uint numericSoundEffectId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint NumericSoundEffectId {
      get { if ((_hasBits0 & 1) != 0) { return numericSoundEffectId_; } else { return NumericSoundEffectIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        numericSoundEffectId_ = value;
      }
    }
    /// <summary>Gets whether the "numeric_sound_effect_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNumericSoundEffectId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "numeric_sound_effect_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNumericSoundEffectId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "delay_seconds" field.</summary>
    public const int DelaySecondsFieldNumber = 2;
    private readonly static uint DelaySecondsDefaultValue = 0;

    private uint delaySeconds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DelaySeconds {
      get { if ((_hasBits0 & 2) != 0) { return delaySeconds_; } else { return DelaySecondsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        delaySeconds_ = value;
      }
    }
    /// <summary>Gets whether the "delay_seconds" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDelaySeconds {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "delay_seconds" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDelaySeconds() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DelayedSoundEffect);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DelayedSoundEffect other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NumericSoundEffectId != other.NumericSoundEffectId) return false;
      if (DelaySeconds != other.DelaySeconds) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasNumericSoundEffectId) hash ^= NumericSoundEffectId.GetHashCode();
      if (HasDelaySeconds) hash ^= DelaySeconds.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasNumericSoundEffectId) {
        output.WriteRawTag(8);
        output.WriteUInt32(NumericSoundEffectId);
      }
      if (HasDelaySeconds) {
        output.WriteRawTag(16);
        output.WriteUInt32(DelaySeconds);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasNumericSoundEffectId) {
        output.WriteRawTag(8);
        output.WriteUInt32(NumericSoundEffectId);
      }
      if (HasDelaySeconds) {
        output.WriteRawTag(16);
        output.WriteUInt32(DelaySeconds);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasNumericSoundEffectId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NumericSoundEffectId);
      }
      if (HasDelaySeconds) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DelaySeconds);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DelayedSoundEffect other) {
      if (other == null) {
        return;
      }
      if (other.HasNumericSoundEffectId) {
        NumericSoundEffectId = other.NumericSoundEffectId;
      }
      if (other.HasDelaySeconds) {
        DelaySeconds = other.DelaySeconds;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            NumericSoundEffectId = input.ReadUInt32();
            break;
          }
          case 16: {
            DelaySeconds = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            NumericSoundEffectId = input.ReadUInt32();
            break;
          }
          case 16: {
            DelaySeconds = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AppearanceTypesCountSoundEffect : pb::IMessage<AppearanceTypesCountSoundEffect>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AppearanceTypesCountSoundEffect> _parser = new pb::MessageParser<AppearanceTypesCountSoundEffect>(() => new AppearanceTypesCountSoundEffect());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AppearanceTypesCountSoundEffect> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Soundbank.SoundBankReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AppearanceTypesCountSoundEffect() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AppearanceTypesCountSoundEffect(AppearanceTypesCountSoundEffect other) : this() {
      _hasBits0 = other._hasBits0;
      count_ = other.count_;
      loopingSoundId_ = other.loopingSoundId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AppearanceTypesCountSoundEffect Clone() {
      return new AppearanceTypesCountSoundEffect(this);
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 1;
    private readonly static uint CountDefaultValue = 0;

    private uint count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Count {
      get { if ((_hasBits0 & 1) != 0) { return count_; } else { return CountDefaultValue; } }
      set {
        _hasBits0 |= 1;
        count_ = value;
      }
    }
    /// <summary>Gets whether the "count" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCount {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "count" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCount() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "looping_sound_id" field.</summary>
    public const int LoopingSoundIdFieldNumber = 2;
    private readonly static uint LoopingSoundIdDefaultValue = 0;

    private uint loopingSoundId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint LoopingSoundId {
      get { if ((_hasBits0 & 2) != 0) { return loopingSoundId_; } else { return LoopingSoundIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        loopingSoundId_ = value;
      }
    }
    /// <summary>Gets whether the "looping_sound_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLoopingSoundId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "looping_sound_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLoopingSoundId() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AppearanceTypesCountSoundEffect);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AppearanceTypesCountSoundEffect other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Count != other.Count) return false;
      if (LoopingSoundId != other.LoopingSoundId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCount) hash ^= Count.GetHashCode();
      if (HasLoopingSoundId) hash ^= LoopingSoundId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCount) {
        output.WriteRawTag(8);
        output.WriteUInt32(Count);
      }
      if (HasLoopingSoundId) {
        output.WriteRawTag(16);
        output.WriteUInt32(LoopingSoundId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCount) {
        output.WriteRawTag(8);
        output.WriteUInt32(Count);
      }
      if (HasLoopingSoundId) {
        output.WriteRawTag(16);
        output.WriteUInt32(LoopingSoundId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCount) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Count);
      }
      if (HasLoopingSoundId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LoopingSoundId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AppearanceTypesCountSoundEffect other) {
      if (other == null) {
        return;
      }
      if (other.HasCount) {
        Count = other.Count;
      }
      if (other.HasLoopingSoundId) {
        LoopingSoundId = other.LoopingSoundId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Count = input.ReadUInt32();
            break;
          }
          case 16: {
            LoopingSoundId = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Count = input.ReadUInt32();
            break;
          }
          case 16: {
            LoopingSoundId = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MinMaxFloat : pb::IMessage<MinMaxFloat>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MinMaxFloat> _parser = new pb::MessageParser<MinMaxFloat>(() => new MinMaxFloat());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MinMaxFloat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Soundbank.SoundBankReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MinMaxFloat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MinMaxFloat(MinMaxFloat other) : this() {
      _hasBits0 = other._hasBits0;
      min_ = other.min_;
      max_ = other.max_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MinMaxFloat Clone() {
      return new MinMaxFloat(this);
    }

    /// <summary>Field number for the "min" field.</summary>
    public const int MinFieldNumber = 1;
    private readonly static float MinDefaultValue = 0F;

    private float min_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Min {
      get { if ((_hasBits0 & 1) != 0) { return min_; } else { return MinDefaultValue; } }
      set {
        _hasBits0 |= 1;
        min_ = value;
      }
    }
    /// <summary>Gets whether the "min" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMin {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "min" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMin() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "max" field.</summary>
    public const int MaxFieldNumber = 2;
    private readonly static float MaxDefaultValue = 0F;

    private float max_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Max {
      get { if ((_hasBits0 & 2) != 0) { return max_; } else { return MaxDefaultValue; } }
      set {
        _hasBits0 |= 2;
        max_ = value;
      }
    }
    /// <summary>Gets whether the "max" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMax {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "max" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMax() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MinMaxFloat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MinMaxFloat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Min, other.Min)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Max, other.Max)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMin) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Min);
      if (HasMax) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Max);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMin) {
        output.WriteRawTag(13);
        output.WriteFloat(Min);
      }
      if (HasMax) {
        output.WriteRawTag(21);
        output.WriteFloat(Max);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMin) {
        output.WriteRawTag(13);
        output.WriteFloat(Min);
      }
      if (HasMax) {
        output.WriteRawTag(21);
        output.WriteFloat(Max);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasMin) {
        size += 1 + 4;
      }
      if (HasMax) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MinMaxFloat other) {
      if (other == null) {
        return;
      }
      if (other.HasMin) {
        Min = other.Min;
      }
      if (other.HasMax) {
        Max = other.Max;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Min = input.ReadFloat();
            break;
          }
          case 21: {
            Max = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            Min = input.ReadFloat();
            break;
          }
          case 21: {
            Max = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
